<?xml version="1.0"?>
<doc>
  <assembly>
    <name>NSoft.NFramework.StringResources</name>
  </assembly>
  <members>
    <member name="T:NSoft.NFramework.StringResources.ExpressionField">
      <summary>
            Web Application에서 사용할 String Resource를 위한 <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" />의 Field를 표현하는 클래스
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.IExpressionField">
      <summary>
            Expression Builder에서 해석할 Expression 요소 정보입니다.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IExpressionField.ClassKey">
      <summary>
            리소스 위치를 나타내는 키값
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IExpressionField.ResourceKey">
      <summary>
            Resouce Value를 얻기 위한 키 값
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExpressionField.#ctor(System.String,System.String)">
      <summary>
            Initialize a new instance of ExpressionField with class key, resource key
            </summary>
      <param name="classKey">리소스의 위치를 나타내는 키값</param>
      <param name="resourceKey">리소스 키</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExpressionField.Equals(NSoft.NFramework.StringResources.IExpressionField)">
      <summary>
            현재 개체가 동일한 형식의 다른 개체와 같은지 여부를 나타냅니다.
            </summary>
      <returns>
            현재 개체가 <paramref name="other" /> 매개 변수와 같으면 true이고, 그렇지 않으면 false입니다.
            </returns>
      <param name="other">이 개체와 비교할 개체입니다.</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExpressionField.Equals(System.Object)">
      <summary>
            지정한 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.
            </summary>
      <returns>
            지정된 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같으면 true이고, 그렇지 않으면 false입니다.
            </returns>
      <param name="obj">현재 <see cref="T:System.Object" />와 비교할 <see cref="T:System.Object" />입니다. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExpressionField.GetHashCode">
      <summary>
            특정 형식에 대한 해시 함수 역할을 합니다. 
            </summary>
      <returns>
            현재 <see cref="T:System.Object" />의 해시 코드입니다.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExpressionField.ToString">
      <summary>
            현재 <see cref="T:System.Object" />를 나타내는 <see cref="T:System.String" />을 반환합니다.
            </summary>
      <returns>
            현재 <see cref="T:System.Object" />를 나타내는 <see cref="T:System.String" />입니다.
            </returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ExpressionField.ClassKey">
      <summary>
            리소스 위치를 나타내는 키값
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ExpressionField.ResourceKey">
      <summary>
            Resouce Value를 얻기 위한 키 값
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceEnumConverter">
      <summary>
            Enum 값의 표현 문자열을 다국어 버전에 맞게 표시할 수 있도록 한다.
            <example><code>
            [TypeConverter(typeof(ResourceEnumConverter))]
            public enum Size { Small, Midium, Large }
            
            // 다국어 리스소에 다음과 같이 정의하면 된다.
            // Size_Small = 작음
            // Size_Midium = 중간
            // Size_Large = 큼
            //
            // CurrentUICulture가 ko 기반이면 Size.Small.ToString() 은 "작음" 이라고 표현된다.
            </code></example></summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.ConvertToString(System.Enum)">
      <summary>
            Convert the given enum value to string using the registered type converter
            </summary>
      <param name="value">The enum value to convert to string</param>
      <returns>The localized string value for the enum</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.GetValues(System.Type,System.Globalization.CultureInfo)">
      <summary>
            Return a list of the enum values and their associated display text for the given enum type
            </summary>
      <param name="enumType">The enum type to get the values for</param>
      <param name="culture">The culture to get the text for</param>
      <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
      <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.GetValues(System.Type)">
      <summary>
            Return a list of the enum values and their associated display text for the given enum type in the current UI Culture
            </summary>
      <param name="enumType">The enum type to get the values for</param>
      <returns>
            A list of KeyValuePairs where the key is the enum value and the value is the text to display
            </returns>
      <remarks>
            This method can be used to provide localized binding to enums in ASP.NET applications.   Unlike 
            windows forms the standard ASP.NET controls do not use TypeConverters to convert from enum values
            to the displayed text.   You can bind an ASP.NET control to the list returned by this method by setting
            the DataValueField to "Key" and theDataTextField to "Value". 
            </remarks>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.#ctor(System.Type,System.Resources.ResourceManager)">
      <summary>
            생성자
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.GetValueText(System.Globalization.CultureInfo,System.Object)">
      <summary>
            지정된 <see cref="T:System.Globalization.CultureInfo" />에 해당하는 Enum 값의 표현 문자열을 구한다. 
            만약 없다면 Enum 값을 표현 문자열로 반환한다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Parse string values to enum values
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Convert the enum value to localized text
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceReaderBase">
      <summary>
            Base Resource Reader class
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.#ctor(System.Collections.Hashtable)">
      <summary>
            constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.Close">
      <summary>
             Closes the resource reader after releasing any resources associated with it.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.GetEnumerator">
      <summary>
             Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> of the resources for this reader.
            </summary>
      <returns>
             A dictionary enumerator for the resources for this reader.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.Finalize">
      <summary>
            Finalizer
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.Dispose">
      <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceReaderBase.Dispose(System.Boolean)">
      <summary>
            Release unmanaged resources.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceReaderBase.IsDisposed">
      <summary>
            Indicate current instance is disposed.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.DefaultResourceProviderFactory">
      <summary>
            Factory of 기본 리소스 제공자 
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceProviderFactoryBase">
      <summary>
            Base Factory for <see cref="T:System.Web.Compilation.IResourceProvider" /></summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.IResourceProviderFactory">
      <summary>
            Resource Provider의 인스턴스를 생성하는 Factory
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.IResourceProviderFactory.CreateGlobalResourceProvider(System.String)">
      <summary>
            지정한 ClassKey에 해당하는 Global Resource Provider를 생성합니다.
            </summary>
      <param name="classKey">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.IResourceProviderFactory.CreateLocalResourceProvider(System.String)">
      <summary>
            지정한 ClassKey에 해당하는 Local Resource Provider를 생성합니다.
            </summary>
      <param name="virtualPath">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IResourceProviderFactory.GlobalResourceProviderName">
      <summary>
            Global Resource 제공자 타입명 (예: ExternalResourceProvider, FileResourceProvider, AdoResourceProvider 등)
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IResourceProviderFactory.LocalResourceProviderName">
      <summary>
            Local Resource 제공자 타입명 (예: ExternalResourceProvider, FileResourceProvider, AdoResourceProvider 등)
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.CreateGlobalResourceProvider(System.String)">
      <summary>
            Create Global Resource Provider
            </summary>
      <param name="classKey">[AssemblyName|]resourceFilename (or [Application|]Section / [Filename|]Section)</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.CreateLocalResourceProvider(System.String)">
      <summary>
            Create Local Resource Provider
            </summary>
      <param name="virtualPath">[Application|]virtualPath</param>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.ProviderTable">
      <summary>
            Lookup table of Providers.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.GlobalResourceProviderName">
      <summary>
            global resource provider name.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.LocalResourceProviderName">
      <summary>
            local resource provider name.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceProviderFactoryBase.ProviderLookupTable">
      <summary>
            Lookup table to store providers.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.AdoResourceProvider">
      <summary>
            Database에 저장된 String Resource 정보를 <see cref="T:NSoft.NFramework.Data.AdoRepository" />를 이용하여 제공합니다.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceProviderBase">
      <summary>
            Base class for Resource Providing.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.IStringResourceProvider">
      <summary>
            문자열 리소스 제공자의 기본 인터페이스입니다.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IStringResourceProvider.AssemblyName">
      <summary>
            Assembly name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.IStringResourceProvider.ResourceName">
      <summary>
            Resource name
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderBase.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderBase.#ctor(System.String,System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderBase.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderBase.ToString">
      <summary>
            현재 인스턴스를 문자열로 나타냅니다.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderBase.AssemblyName">
      <summary>
            Assembly name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderBase.ResourceName">
      <summary>
            Resource name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderBase.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
    </member>
    <member name="F:NSoft.NFramework.StringResources.AdoResourceProvider.DefaultStringResourceTableName">
      <summary>
            Default TableName for StringResources ('StringResources')
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.AdoResourceProvider.DefaultAssemblyName">
      <summary>
            Default assembly name ('DEFAULT')
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceProvider.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            constructor
            </summary>
      <param name="databaseName">database connection string name</param>
      <param name="tableName">table name</param>
      <param name="assemblyName">string resource table name</param>
      <param name="resourceName">section name</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceProvider.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceProvider.ToString">
      <summary>
            현재 인스턴스의 정보를 문자열로 표현합니다.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceProvider.DatabaseName">
      <summary>
            Database name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceProvider.TableName">
      <summary>
            Table name for String Resources
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceProvider.Repository">
      <summary>
            Resource Repository
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceProvider.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.AdoResourceReader">
      <summary>
            Resource Reader by ADO.NET
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceReader.#ctor(System.Collections.Hashtable)">
      <summary>
            생성자
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.AdoResourceRepository">
      <summary>
            실제 Database에 접근해서 StringResource 정보를 가져오는 Repository입니다.
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.AdoResourceRepository.ParameterLength">
      <summary>
            성능을 높히기 위해 모든 파라미터의 Length를 255로 했음
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.AdoResourceRepository.GetResourcesSql">
      <summary>
            모든 Resource 정보를 가져오는 SQL 문
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.AdoResourceRepository.GetResourceSql">
      <summary>
            특정 리소스 키에 해당하는 리소스 정보를 가져오는  SQL 문
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceRepository.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            생성자 
            </summary>
      <param name="databaseName">String Resource 정보가 있는 Database의 connection string name</param>
      <param name="tableName">String Resources 정보를 담은 Table 명</param>
      <param name="assemblyName">대분류</param>
      <param name="resourceName">String Resources의 중분류</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceRepository.#ctor(NSoft.NFramework.Data.IAdoRepository,System.String,System.String,System.String)">
      <summary>
            생성자 
            </summary>
      <param name="repository">IAdoRepository 인스턴스</param>
      <param name="tableName">String Resources 정보를 담은 Table 명</param>
      <param name="assemblyName">대분류</param>
      <param name="resourceName">String Resources의 중분류</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceRepository.GetResources(System.Globalization.CultureInfo)">
      <summary>
            지정한 문화권의 모든 리소스 정보를 Hashtable로 반환한다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.AdoResourceRepository.GetResource(System.Globalization.CultureInfo,System.String)">
      <summary>
            리소스 값 얻기
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.DatabaseName">
      <summary>
            String Resource 정보가 있는 Database의 connection string name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.TableName">
      <summary>
            String Resources 정보를 담은 Table
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.AssemblyName">
      <summary>
            Assembly Name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.ResourceName">
      <summary>
            String Resources의 대분류(Section)
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.Ado">
      <summary>
            AdoRepository for <see cref="P:NSoft.NFramework.StringResources.AdoResourceRepository.DatabaseName" /></summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.AssemblyNameParameter">
      <summary>
            AssemblyName에 대한 AdoParameter 인스턴스
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.AdoResourceRepository.ResourceNameParameter">
      <summary>
            ResourceName에 대한 AdoParameter 인스턴스
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.FileResourceProvider">
      <summary>
            Ini 파일에 저장된 String Resource 정보를 제공합니다.
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.FileResourceProvider.DefaultFileType">
      <summary>
            리소스 파일의 기본 타입 (ini)
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.FileResourceProvider.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.FileResourceProvider.#ctor(System.String,System.String)">
      <summary>
            Constructor
            </summary>
      <param name="assemblyName">
      </param>
      <param name="resourceName">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.FileResourceProvider.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.FileResourceProvider.Directory">
      <summary>
            Resource File들이 있는 Directory Name (절대, 상대 둘다 된다.)
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.FileResourceProvider.FileType">
      <summary>
            File Extension name of Resource file. (value="ini" | "xml", default="ini")
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.FileResourceProvider.Watcher">
      <summary>
            파일 변경을 감시하는 Watcher입니다.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.FileResourceProvider.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.FileResourceReader">
      <summary>
            FileResourceProvider가 제공하는 <see cref="T:System.Resources.IResourceReader" /></summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.FileResourceReader.#ctor(System.Collections.Hashtable)">
      <summary>
            Constructor
            </summary>
      <param name="resources">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.INHResourceRepository.GetResources(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            지정한 부분의 모든 리소스 정보를 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.INHResourceRepository.GetResource(System.String,System.String,System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="assemblyName">Assembly Name</param>
      <param name="sectionName">Section name</param>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.INHResourceRepository.GetResource(System.String,System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="section">Section name or NHResource File name</param>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.INHResourceRepository.GetResource(System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.NHibernate.NHResource">
      <summary>
            NHibernate Resource entity
            NOTE: Mappging 파일에서 NHResource는 lazy=false 이어야합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResource.#ctor">
      <summary>
            기본 생성자
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResource.#ctor(System.String,System.String,System.String)">
      <summary>
            생성자
            </summary>
      <param name="assemblyName">Assembly name (Ini 의 파일명, External Resource의 assembly 명)</param>
      <param name="sectionName">Section Name</param>
      <param name="resourceKey">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResource.GetHashCode">
      <summary>
            Hash Code를 계산합니다.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResource.ToString">
      <summary>
            현재 인스턴스 정보를 문자열로 표현합니다.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResource.AssemblyName">
      <summary>
            Assembly name (Ini 의 파일명, External Resource의 assembly 명)
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResource.Section">
      <summary>
            Section Name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResource.ResourceKey">
      <summary>
            Resource Key
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResource.ResourceValue">
      <summary>
            default locale value
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.NHibernate.NHResourceLocale">
      <summary>
            Localization information of Resource
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceLocale.ToString">
      <summary>
            현재 인스턴스 정보를 문자열로 표현합니다.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResourceLocale.ResourceValue">
      <summary>
            Localized resource value
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider">
      <summary>
            NHResource Provider by NHibernate
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
      <param name="resourceName">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider.#ctor(System.String,System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider.Repository">
      <summary>
            Instance of repository
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.NHibernate.NHResourceProvider.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.NHibernate.NHResourceReader">
      <summary>
            NHibernate를 이용한 <see cref="T:System.Resources.IResourceReader" />를 구현한 클래스입니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceReader.#ctor(System.Collections.Hashtable)">
      <summary>
            생성자
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository">
      <summary>
        <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" /> 를 다루는 Repository
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.KeyFormat">
      <summary>
            NHibernate Resource Repository의 캐시를 위한 키의 포맷
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.GetResources(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            지정한 부분의 모든 리소스 정보를 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.GetResource(System.String,System.String,System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="assemblyName">Assembly Name</param>
      <param name="sectionName">Section name</param>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.GetResource(System.String,System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="section">Section name or NHResource File name</param>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.GetResource(System.String)">
      <summary>
            지정된 리소스키에 해당하는 <see cref="T:NSoft.NFramework.StringResources.NHibernate.NHResource" />정보를 가져온다.
            </summary>
      <param name="resourceKey">NHResource Key</param>
      <returns>NHResource Value를 갖는 Entity</returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.NHibernate.NHResourceRepository.BuildDetachedQueryOver(System.String,System.String,System.String)">
      <summary>
        <see cref="T:NHibernate.Criterion.QueryOver`2" />를 빌드합니다.
            </summary>
      <param name="assemblyName">
      </param>
      <param name="section">
      </param>
      <param name="resourceKey">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ExternalResourceProvider">
      <summary>
            External Resource Assembly로부터 Resource 정보를 제공하는 Provider입니다.
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.LocalResourceProvider">
      <summary>
            Local Resource Assembly로부터 정보를 얻습니다. AssemblyName에 값을 넣지 않습니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.LocalResourceProvider.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.LocalResourceProvider.#ctor(System.String)">
      <summary>
            Initialize a new instance of LocalResourceProvider with default assembly name and resourceName.
            </summary>
      <param name="resourceName">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.LocalResourceProvider.#ctor(System.String,System.String)">
      <summary>
            Initialize a new instance of LocalResourceProvider with assembly name and resourceName.
            </summary>
      <param name="assemblyName">assembly name</param>
      <param name="resourceName">resource name</param>
    </member>
    <member name="F:NSoft.NFramework.StringResources.LocalResourceProvider._syncLock">
      <summary>
            동기화 객체
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.LocalResourceProvider.CreateResourceManager">
      <summary>
            Create <see cref="P:NSoft.NFramework.StringResources.LocalResourceProvider.ResourceManager" /> with <see cref="P:NSoft.NFramework.StringResources.ResourceProviderBase.AssemblyName" /> and <see cref="P:NSoft.NFramework.StringResources.ResourceProviderBase.ResourceName" /></summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.LocalResourceProvider.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
             </param>
    </member>
    <member name="P:NSoft.NFramework.StringResources.LocalResourceProvider.ResourceManager">
      <summary>
            Extern Resource Manager
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.LocalResourceProvider.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
      <remarks>
             LocalResourceProvider 는 <see cref="T:System.Resources.IResourceReader" />를 지원하지 않는다.
             </remarks>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExternalResourceProvider.#ctor">
      <summary>
            default constructor
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ExternalResourceProvider.#ctor(System.String,System.String)">
      <summary>
            constructor 
            </summary>
      <param name="assemblyName">External resource assembly name</param>
      <param name="resourceName">Resource filename in external resource assembly</param>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ParameterizedResourceProvider">
      <summary>
        <see cref="T:NSoft.NFramework.ResourceProviders.IResourceProvider" />의 값이 다른 리소스 값을 참조할 때, 참조된 값을 Parsing해서 가져올 수 있도록 한다.
            </summary>
      <example>
            Title=RealWeb.Common.Library
            Version=3.0
            Product=${Title} v${Version}
            
            일때
            <code>
            providerDecorator = new Parameterized(new ExternalResourceProvider("ExtRes", "Strings"));
            string productName = providerDecorator.GetObject("Product", CultureInfo.CurrentUICulture);
            
            // productName is RealWeb.Common.Library v3.0
            </code></example>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceProviderDecorator">
      <summary>
            StringResourceProvider에 대한 Decorator
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderDecorator.#ctor(NSoft.NFramework.StringResources.ResourceProviderBase)">
      <summary>
            Constructor
            </summary>
      <param name="innerProvider">wrapped instance of ResourceProviderBase</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProviderDecorator.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderDecorator.InnerProvider">
      <summary>
            Wrapped instance of ResourceProviderBase
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderDecorator.AssemblyName">
      <summary>
            Assembly name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderDecorator.ResourceName">
      <summary>
            Resource name
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProviderDecorator.ResourceReader">
      <summary>
             소스에서 리소스 값을 읽기 위한 개체를 가져옵니다.
            </summary>
      <returns>
             현재 리소스 공급자와 관련된 <see cref="T:System.Resources.IResourceReader" />입니다.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ParameterizedResourceProvider.#ctor(NSoft.NFramework.StringResources.ResourceProviderBase)">
      <summary>
            Constructor
            </summary>
      <param name="inner">resource provider to wrapped</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ParameterizedResourceProvider.GetObject(System.String,System.Globalization.CultureInfo)">
      <summary>
             키 및 culture에 대한 리소스 개체를 반환합니다.
            </summary>
      <returns>
        <paramref name="resourceKey" /> 및 <paramref name="culture" />에 대한 리소스 값을 포함하는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="resourceKey">
             특정 리소스를 식별하는 키입니다.
             </param>
      <param name="culture">
             리소스의 지역화된 값을 식별하는 culture입니다.
            </param>
      <returns>resource value, if not exists, return null</returns>
    </member>
    <member name="T:NSoft.NFramework.StringResources.ResourceProvider">
      <summary>
            사용자가 일반적으로 사용하는 클래스이다.
            Castle.Windsor component에는 IResourceProviderFactory를 정의하면된다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProvider.GetObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            지정된 Class Key에 해당하는 Provider를 제공한다. 
            classKey의 형식은 [AssemblyName|]ResourceName 또는 [FileName|]SectionName 으로 표현된다. 
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.ResourceProvider.GetString(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            지정된 Class Key에 해당하는 Provider를 제공한다. 
            classKey의 형식은 [AssemblyName|]ResourceName 또는 [FileName|]SectionName 으로 표현된다. 
            </summary>
    </member>
    <member name="P:NSoft.NFramework.StringResources.ResourceProvider.ProviderFactory">
      <summary>
        <see cref="T:System.Web.Compilation.IResourceProvider" />를 생성해주는 <see cref="T:NSoft.NFramework.StringResources.IResourceProviderFactory" />를 반환한다. 
            이 설정정보는 Castle Windsor component로 정의되어져 있다.
            </summary>
      <remark>
            리소스에 있는 Windsor.Provider.config 를 참고하세요
            </remark>
      <example>
        <!-- ResourceProviderFactory를 지정합니다. -->
        <component id="ResourceProviderFactory" service="NSoft.NFramework.StringResources.IResourceProviderFactory, NSoft.NFramework.StringResources" type="NSoft.NFramework.StringResources.DefaultResourceProviderFactory, NSoft.NFramework.StringResources">
          <parameters>
            <culture>#{culture}</culture>
            <GlobalResourceProviderId>ExternalResourceProvider</GlobalResourceProviderId>
            <?if DEBUG?>
            <LocalResourceProviderId>FileResourceProvider</LocalResourceProviderId>
            <?else ?>
            <LocalResourceProviderId>NHResourceProvider</LocalResourceProviderId>
            <?end ?>
          </parameters>
        </component>
      </example>
    </member>
    <member name="T:NSoft.NFramework.StringResources.StringResourceReaderBase">
      <summary>
        <see cref="T:System.Resources.IResourceReader" />의 Abstract class
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.#ctor(System.Collections.Hashtable)">
      <summary>
            생성자
            </summary>
      <param name="resources">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.Close">
      <summary>
            리소스 해제
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.GetEnumerator">
      <summary>
            리소스 열거자를 반환합니다.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.Finalize">
      <summary>
            소멸자
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.Dispose">
      <summary>
            리소스 해제
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceReaderBase.Dispose(System.Boolean)">
      <summary>
            리소스 해제
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:NSoft.NFramework.StringResources.StringResourceReaderBase.IsDisposed">
      <summary>
            리소스 해제 여부
            </summary>
    </member>
    <member name="T:NSoft.NFramework.StringResources.StringResourceTool">
      <summary>
            문자열 리소스에 대한 Helper Class 입니다.
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.CLASS_ASSEMBLY_NAME">
      <summary>
            AssemblyName 키
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.CLASS_RESOURCE_NAME">
      <summary>
            리소스 명의 키
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.CLASS_KEY_DELIMITER">
      <summary>
            Class key 구분자 ('|')
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.EXPRESSION_DELIMITER">
      <summary>
            Expression 구분자 (',')
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.PARAM_REF_START">
      <summary>
            Parameterized key start parameter ("${")
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.PARAM_REF_END">
      <summary>
            Parameterized key end parameter ("}")
            </summary>
    </member>
    <member name="F:NSoft.NFramework.StringResources.StringResourceTool.DEFAULT_ASSEMBLY_NAME">
      <summary>
            기본 리소스 파일명 또는 APPLICATION 명 (string.Empty)
            </summary>
      <value>DEFAULT</value>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceTool.ParseExpression(System.String,System.String@,System.String@)">
      <summary>
            예: &lt;%$ ExtResources: AssemblyName|ResourceFilename, ResourceKey %&gt; 형태를 파싱한다.
            </summary>
      <param name="expression">
      </param>
      <param name="classKey">
      </param>
      <param name="resourceKey">
      </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceTool.ParseClassKey(System.String,System.String@,System.String@)">
      <summary>
            ResourceProviderFactory에 ClassKey로 입력되는 값은 [AssemblyName|]ResourceName 형식이다.
            </summary>
      <param name="classKey">리소스가 존재하는 위치를 나타내는 문자열 [AssemblyName|]ResourceFileName</param>
      <param name="assemblyName">리소스가 정의된 Assembly 명</param>
      <param name="resourceFilename">리소스 파일명</param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.StringResourceTool.ParseClassKey(System.String,System.Char,System.String@,System.String@)">
      <summary>
            ResourceProviderFactory에 ClassKey로 입력되는 값은 [AssemblyName|]ResourceType 형식이다.
            이 값을 파싱하여 구분한다.
            </summary>
      <param name="classKey">리소스가 존재하는 위치를 나타내는 문자열 [AssemblyName|]ResourceFileName</param>
      <param name="delimiter">assemblyName과 resourceFileName 사이의 구분자</param>
      <param name="assemblyName">리소스가 정의된 Assembly 명</param>
      <param name="resourceFilename">리소스 파일명</param>
    </member>
    <member name="T:NSoft.NFramework.StringResources.WebResourceExpressionBuilder">
      <summary>
            웹 리소스 정보를 추출하기 위해 표현식을 만드는 클래스입니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            외부 Resource Assembly로부터 지정한 리소스 키에 해당하는 값을 가져온다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)">
      <summary>
            Database 로부터 지역 리소스 정보를 얻는다.
            </summary>
      <param name="classKey">
      </param>
      <param name="resourceKey">
      </param>
      <param name="culture">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)">
      <summary>
             리소스 파일에서 값을 반환합니다.
            </summary>
      <returns>
             구문 분석한 식과 관련된 <see cref="T:System.Object" />입니다. 구문 분석한 식은 클래스 이름과 리소스 키를 포함합니다.
            </returns>
      <param name="target">
             식이 포함된 개체입니다.
             </param>
      <param name="entry">
             식에 의해 바인딩된 속성에 대한 정보를 나타내는 개체입니다.
             </param>
      <param name="parsedData">
        <see cref="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 메서드에 의해 반환된 구문 분석한 데이터가 들어 있는 개체입니다.
            </param>
      <param name="context">
             식을 계산하는 데 필요한 컨텍스트 정보입니다.
            </param>
    </member>
    <member name="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)">
      <summary>
             구문 분석된 식을 나타내는 개체를 반환합니다.
            </summary>
      <returns>
             구문 분석한 식을 나타내는 <see cref="T:System.Object" />입니다.
            </returns>
      <param name="expression">선언적 식의 값입니다.</param>
      <param name="propertyType">식에 의해 바인딩된 속성의 형식입니다.</param>
      <param name="context">식을 계산하는 데 필요한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.Web.HttpException">리소스 식이 없거나 유효하지 않은 경우</exception>
    </member>
    <member name="M:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)">
      <summary>
             페이지 실행 중에 계산할 코드 식을 반환합니다.
             </summary>
      <returns>
             메서드를 호출하는 <see cref="T:System.CodeDom.CodeExpression" />입니다.
            </returns>
      <param name="entry">개체의 속성 이름입니다.</param>
      <param name="parsedData">식의 구문 분석된 값입니다.</param>
      <param name="context">컨트롤 또는 페이지에 대한 속성입니다.</param>
    </member>
    <member name="P:NSoft.NFramework.StringResources.WebResourceExpressionBuilder.SupportsEvaluate">
      <summary>
            비컴파일 기능을 사용하는 페이지에서 식이 계산될 수 있는지 여부를 나타내는 값을 반환합니다.
            </summary>
      <returns>
            모든 경우에 true를 반환합니다.
            </returns>
    </member>
  </members>
</doc>