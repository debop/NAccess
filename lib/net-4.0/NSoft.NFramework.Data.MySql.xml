<?xml version="1.0"?>
<doc>
  <assembly>
    <name>NSoft.NFramework.Data.MySql</name>
  </assembly>
  <members>
    <member name="T:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase">
      <summary>
            Enterprise Library DAAB Database for MySql
            </summary>
      <example>
        <code>
            // 환경 설정 파일에 DAAB 관련해서 OracleDatabase를 추가하면 됩니다.
            <dataConfiguration defaultDatabase="LOCAL_XE"><providerMappings><add databaseType="NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlProvider, NSoft.NFramework.Data.MySql" name="MySql.Data.MySqlClient" /></providerMappings></dataConfiguration></code>
      </example>
    </member>
    <member name="F:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.ParameterToken">
      <summary>
            The parameter token used to delimit parameters for the MySQL database.
            </summary>
      <remarks>MySQL now recognises '?' as its preferred parameter token, however the .NET data provider is still using the '@' sign</remarks>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given
            <paramref name="command" />.
            </summary>
      <param name="command">The command to add the in parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <remarks>
            This version of the method is used when you can have the same
            parameter object multiple times with different values.
            </remarks>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Object)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given
            <paramref name="command" />.
            </summary>
      <param name="command">The commmand to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType,System.String,System.Data.DataRowVersion)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given
            <paramref name="command" />.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <param name="sourceColumn">The name of the source column
            mapped to the DataSet and used for loading or returning the value.</param>
      <param name="sourceVersion">One of the
            <see cref="T:System.Data.DataRowVersion" /> values.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddOutParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32)">
      <summary>
            Adds a new Out <see cref="T:System.Data.Common.DbParameter" /> object to the given
            <paramref name="command" />.
            </summary>
      <param name="command">The command to add the out parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <param name="size">The maximum size of the data within the
            column.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object to
            the command.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="size">The maximum size of the data within the
            column.</param>
      <param name="direction">One of the
            <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the
            parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual
            Basic) values.</param>
      <param name="precision">The maximum number of digits used to
            represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which
            <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column
            mapped to the DataSet and used for loading or returning the
            <paramref name="value" />.</param>
      <param name="sourceVersion">One of the
            <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object to
            the command.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <param name="direction">One of the
            <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="sourceColumn">The name of the source column
            mapped to the DataSet and used for loading or returning the
            <paramref name="value" />.</param>
      <param name="sourceVersion">One of the
            <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.BuildParameterName(System.String)">
      <summary>
            Builds a value parameter name for the current database.
            </summary>
      <param name="name">The name of the parameter.</param>
      <returns>A correctly formatted parameter name.</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.ConfigureParameter(MySql.Data.MySqlClient.MySqlParameter,System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Configures a given <see cref="T:System.Data.Common.DbParameter" />.
            </summary>
      <param name="parameter">The parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:MySql.Data.MySqlClient.MySqlDbType" />
            values.</param>
      <param name="size">The maximum size of the data within the
            column.</param>
      <param name="direction">One of the
            <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the
            parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual
            Basic) values.</param>
      <param name="precision">The maximum number of digits used to
            represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which
            <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column
            mapped to the DataSet and used for loading or returning the
            <paramref name="value" />.</param>
      <param name="sourceVersion">One of the
            <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.CreateParameter(System.String,MySql.Data.MySqlClient.MySqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object.
            </summary>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="size">The maximum size of the data within the
            column.</param>
      <param name="direction">One of the
            <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the
            parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual
            Basic) values.</param>
      <param name="precision">The maximum number of digits used to
            represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which
            <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column
            mapped to the DataSet and used for loading or returning the
            <paramref name="value" />.</param>
      <param name="sourceVersion">One of the
            <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.DeriveParameters(System.Data.Common.DbCommand)">
      <summary>
            Retrieves parameter information from the stored procedure specified
            in the <see cref="T:System.Data.Common.DbCommand" /> and populates the Parameters
            collection of the specified <see cref="T:System.Data.Common.DbCommand" /> object.
            </summary>
      <param name="discoveryCommand">The <see cref="T:System.Data.Common.DbCommand" /> to do
            the discovery.</param>
      <remarks>The <see cref="T:System.Data.Common.DbCommand" /> must be a
            <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> instance.</remarks>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
      <summary>
            Determines if the number of parameters in the command matches the
            array of parameter values.
            </summary>
      <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> containing the
            parameters.</param>
      <param name="values">The array of parameter values.</param>
      <returns>
        <see langword="true" /> if the number of parameters and
            values match; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
      <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
      <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter" /> to set the
            event.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase.CheckIfMySqlCommand(System.Data.Common.DbCommand)">
      <summary>
            Checks if a database command is a MySql command and converts.
            </summary>
      <param name="command">The command.</param>
      <returns>converted MySqlCommand</returns>
    </member>
    <member name="T:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabaseAssembler">
      <summary>
            Represents the process to build an instance of <see cref="T:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase" /> described by configuration information.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabaseAssembler.Assemble(System.String,System.Configuration.ConnectionStringSettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
      <summary>
            Builds an instance of the concrete subtype of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database" /> the receiver knows how to build, based on 
            the provided connection string and any configuration information that might be contained by the 
            <paramref name="configurationSource" />.
            </summary>
      <param name="name">The name for the new database instance.</param>
      <param name="connectionStringSettings">The connection string for the new database instance.</param>
      <param name="configurationSource">The source for any additional configuration information.</param>
      <returns>
            The new database instance.
            </returns>
    </member>
    <member name="T:NSoft.NFramework.Data.MySql.IMySqlRepository">
      <summary>
            MySQL 을 위한 AdoRepository의 인터페이스입니다.
            </summary>
    </member>
    <member name="P:NSoft.NFramework.Data.MySql.IMySqlRepository.Db">
      <summary>
            DAAB의 MySql 용 Database 인스턴스
            </summary>
    </member>
    <member name="T:NSoft.NFramework.Data.MySql.MySqlCommandAsync">
      <summary>
            MySql의 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />를 비동기 방식으로 수행하는 메소드를 제공합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsyncBySqlString(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsyncBySqlString(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsyncByProcedure(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsyncByProcedure(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsListAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            Multi-ResultSet일 경우에 DataTable 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteDataTableAsListAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            Multi-ResultSet일 경우에 DataTable 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteNonQueryAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 SqlComnnad 인스턴스</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteNonQueryAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 쿼리문 또는 Procecedure 명</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteNonQueryBySqlStringAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 쿼리문</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteNonQueryByProcedureAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 프로시져 명</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteReaderAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> 인스턴스</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteReaderAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 SQL 문</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteReaderBySqlStringAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 SQL 문</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteReaderByProcedureAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 Procedure 명</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:MySql.Data.MySqlClient.MySqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteScalarAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 MySqlCommand 인스턴스</param>
      <param name="parameters">Command Parameters</param>
      <returns>Scalar 값을 결과로 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteScalarAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 쿼리문 또는 Procedure 명</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteScalarBySqlStringAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 쿼리문</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteScalarByProcedureAsync(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 쿼리문</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteMapObject``1(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,System.Func{``0},NSoft.NFramework.Data.Mappers.INameMapper,System.Int32,System.Int32,System.Action{System.Data.IDataReader,``0},NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 실행하여, 결과 셋을 Persistent Object의 컬렉션으로 매핑합니다.
            </summary>
      <typeparam name="T">Persistent Object의 수형</typeparam>
      <param name="db">MySqlProvider 인스턴스</param>
      <param name="cmd">MysqlCommand 인스턴스</param>
      <param name="mapObjectFactory">PersistentObject 생성 Factory</param>
      <param name="nameMapper">NameMapper 인스턴스</param>
      <param name="firstResult">첫번째 결과 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 결과 갯수</param>
      <param name="additionalMapping">부가적인 매핑 작업을 수행할 델리게이트</param>
      <param name="parameters">OracleCommand에 설정할 Parameter 정보</param>
      <returns>DataReader로부터 인스턴싱된 Persistent Object의 컬렉션을 결과로 반환하는 Task</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.ExecuteMapObject``1(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,MySql.Data.MySqlClient.MySqlCommand,System.Func{``0},NSoft.NFramework.Data.Mappers.INameMap,System.Int32,System.Int32,System.Action{System.Data.IDataReader,``0},NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 실행하여, 결과 셋을 Persistent Object의 컬렉션으로 매핑합니다.
            </summary>
      <typeparam name="T">Persistent Object의 수형</typeparam>
      <param name="db">MySqlProvider 인스턴스</param>
      <param name="cmd">MysqlCommand 인스턴스</param>
      <param name="mapObjectFactory">PersistentObject 생성 Factory</param>
      <param name="nameMap">NameMap 인스턴스</param>
      <param name="firstResult">첫번째 결과 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 결과 갯수</param>
      <param name="additionalMapping">부가적인 매핑 작업을 수행할 델리게이트</param>
      <param name="parameters">OracleCommand에 설정할 Parameter 정보</param>
      <returns>DataReader로부터 인스턴싱된 Persistent Object의 컬렉션을 결과로 반환하는 Task</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.GetMySqlCommand(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String)">
      <summary>
            쿼리 문 또는 Procedure Name을 실행할 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB db</param>
      <param name="query">수행할 쿼리문 또는 Procedure Name</param>
      <returns>생성한 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.GetMySqlCommand(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,System.Boolean)">
      <summary>
            쿼리 문 또는 Procedure Name을 실행할 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB MySqlProvider</param>
      <param name="query">수행할 쿼리문 또는 Procedure Name</param>
      <param name="discoverParams">Procedure일 경우 Parameter 빌드</param>
      <returns>생성한 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /></returns>
      <seealso cref="!:AdoRepositoryImplBase.GetCommand(string,bool)" />
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.GetSqlStringMySqlCommand(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String)">
      <summary>
            쿼리 문 <paramref name="sqlString" />을 수행할 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB MySqlProvider</param>
      <param name="sqlString">수행할 쿼리문</param>
      <returns>생성한 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlCommandAsync.GetProcedureMySqlCommand(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.String,System.Boolean)">
      <summary>
            Procedure <paramref name="spName" />를 수행할 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /> 를 생성합니다.
            </summary>
      <param name="db">DAAB MySqlProvider</param>
      <param name="spName">Procedure name</param>
      <param name="discoverParams">discover parameters</param>
      <returns>생성한 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" /></returns>
    </member>
    <member name="T:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl">
      <summary>
            MySql을 사용하기 위한 <see cref="T:NSoft.NFramework.Data.IAdoRepository" />를 구현한 클래스입니다.
            비동기 IO 작업을 통해 확장성이 획기적으로 좋아졌습니다. 동시 처리 허용범위가 커졌습니다.
            NOTE: Command를 중복해서 사용하면 안됩니다. (비동기 방식이라 다른 작업에서 Command의 Connection이 닫힐 수 있습니다)
            NOTE: 중복 사용을 하고 싶다면, 메소드 호출 전에 Command에 Connection을 미리 지정해 주고, 모든 비동기 작업이 끝난 후에 Connection을 닫아야 합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.#ctor">
      <summary>
            생성자
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.#ctor(System.String)">
      <summary>
            생성자
            </summary>
      <param name="dbName">
      </param>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteDataSet(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 실행하여, 결과를 DataSet으로 반환합니다.
            </summary>
      <param name="cmd">실행할 <see cref="T:System.Data.Common.DbCommand" /> instance.</param>
      <param name="firstResult">첫번째 레코드의 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 레코드 수 (0 이면 무시하고, 마지막 레코드까지 가져온다</param>
      <param name="parameters">collectio of parameters of Command</param>
      <returns>결과 셋이 담긴 DataSet</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteDataTableAsList(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            여러 ResultSet을 반환할 수 있으므로, DataTable의 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteDataTable(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            지정된 Command를 실행하여, DataTable을 빌드합니다.
            </summary>
      <param name="cmd">실행할 Select용 Command</param>
      <param name="firstResult">첫번째 레코드의 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 레코드 수 (0 이면 무시하고, 마지막 레코드까지 가져온다</param>
      <param name="parameters">DbCommand의 Parameter 정보</param>
      <returns>instance of <see cref="T:System.Data.DataTable" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteNonQueryInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteNonQuery 메소드를 실행합니다.
            </summary>
      <param name="cmd">실행할 Command 객체</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteScalarInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteScalar 메소드를 실행합니다.
            </summary>
      <param name="cmd">실행할 Command 객체</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.ExecuteReaderInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteReader 메소드를 실행합니다.
            </summary>
      <param name="cmd">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.Data.MySql.MySqlRepositoryImpl.Db">
      <summary>
             Microsoft Enterprise Library DAAB의 Sql Server용 Database
            </summary>
    </member>
    <member name="T:NSoft.NFramework.Data.MySql.MySqlTool">
      <summary>
            MySql 을 위한 Utility class 입니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlTool.AssertIsMySqlCommand(System.Data.Common.DbCommand)">
      <summary>
        <paramref name="cmd" />의 수형이 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />수형인지 확인합니다.
            </summary>
      <param name="cmd">수형 확인할 DbCommand 인스턴스</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="cmd" />의 수형이 <see cref="T:MySql.Data.MySqlClient.MySqlCommand" />가 아닐 때</exception>
    </member>
    <member name="M:NSoft.NFramework.Data.MySql.MySqlTool.CreateMySqlConnection(NSoft.NFramework.Data.MySql.EnterpriseLibrary.MySqlDatabase,System.Boolean@)">
      <summary>
            MySql Connection을 비동기 방식으로 엽니다.
            </summary>
      <param name="db">DAAB MySqlProvider 인스턴스</param>
      <param name="newConnectionCreated">새로운 Connenction이 생성되었는지 여부</param>
      <returns>새로 연결된 <see cref="T:MySql.Data.MySqlClient.MySqlConnection" />의 인스턴스, 만약 연결에 실패했다면 null을 반환합니다.</returns>
    </member>
  </members>
</doc>