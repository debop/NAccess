<?xml version="1.0"?>
<doc>
  <assembly>
    <name>NSoft.NFramework.Data.PostgreSql</name>
  </assembly>
  <members>
    <member name="T:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase">
      <summary>
            Enterprise DAAB Database for PostgreSQL
            </summary>
      <example>
        <code>
            // 환경 설정 파일에 DAAB 관련해서 OracleDatabase를 추가하면 됩니다.
            <dataConfiguration defaultDatabase="LOCAL_XE"><providerMappings><add databaseType="NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase, NSoft.NFramework.Data.PostgreSql" name="MySql.Data.PostgreSql" /></providerMappings></dataConfiguration></code>
      </example>
    </member>
    <member name="F:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ParameterToken">
      <summary>
            The parameter token used to delimit parameters for the PostgreSQL database. (:)
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.#ctor(System.String)">
      <summary>
            생성자
            </summary>
      <param name="connectionString">
      </param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given <paramref name="command" />.
            </summary>
      <param name="command">The command to add the in parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <remarks>
            This version of the method is used when you can have the same parameter object multiple times with different values.
            </remarks>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType,System.Object)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given <paramref name="command" />.
            </summary>
      <param name="command">The commmand to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType,System.String,System.Data.DataRowVersion)">
      <summary>
            Adds a new In <see cref="T:System.Data.Common.DbParameter" /> object to the given <paramref name="command" />.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the value.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddOutParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType,System.Int32)">
      <summary>
            Adds a new Out <see cref="T:System.Data.Common.DbParameter" /> object to the given <paramref name="command" />.
            </summary>
      <param name="command">The command to add the out parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="size">The maximum size of the data within the column.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object to the command.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="size">The maximum size of the data within the column.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual Basic) values.</param>
      <param name="precision">The maximum number of digits used to represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value" />.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.AddParameter(System.Data.Common.DbCommand,System.String,NpgsqlTypes.NpgsqlDbType,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object to the command.
            </summary>
      <param name="command">The command to add the parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value" />.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.BuildParameterName(System.String)">
      <summary>
            Builds a value parameter name for the current database.
            </summary>
      <param name="name">The name of the parameter.</param>
      <returns>A correctly formated parameter name.</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ConfigureParameter(Npgsql.NpgsqlParameter,System.String,NpgsqlTypes.NpgsqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Configures a given <see cref="T:Npgsql.NpgsqlParameter" />.
            </summary>
      <param name="parameter">The parameter.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="size">The maximum size of the data within the column.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual Basic) values.</param>
      <param name="precision">The maximum number of digits used to represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value" />.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ConfigureParameter(System.Data.Common.DbParameter,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Configures a given <see cref="T:System.Data.Common.DbParameter" />.
            </summary>
      <param name="param">The <see cref="T:System.Data.Common.DbParameter" /> to configure.</param>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="size">The maximum size of the data within the column.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual Basic) values.</param>
      <param name="precision">The maximum number of digits used to represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value" />.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.CreateParameter(System.String,NpgsqlTypes.NpgsqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
            Adds a new instance of a <see cref="T:System.Data.Common.DbParameter" /> object.
            </summary>
      <param name="name">The name of the parameter.</param>
      <param name="dbType">One of the <see cref="T:NpgsqlTypes.NpgsqlDbType" /> values.</param>
      <param name="size">The maximum size of the data within the column.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="nullable">A value indicating whether the parameter accepts <see langword="null" /> (<b>Nothing</b> in Visual Basic) values.</param>
      <param name="precision">The maximum number of digits used to represent the <paramref name="value" />.</param>
      <param name="scale">The number of decimal places to which <paramref name="value" /> is resolved.</param>
      <param name="sourceColumn">The name of the source column mapped to the DataSet and used for loading or returning the <paramref name="value" />.</param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <param name="value">The value of the parameter.</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.DeriveParameters(System.Data.Common.DbCommand)">
      <summary>
            Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Common.DbCommand" /> and populates the Parameters collection of the specified <see cref="T:System.Data.Common.DbCommand" /> object.
            </summary>
      <param name="discoveryCommand">The <see cref="T:System.Data.Common.DbCommand" /> to do the discovery.</param>
      <remarks>The <see cref="T:System.Data.Common.DbCommand" /> must be a <see cref="T:Npgsql.NpgsqlCommand" /> instance.</remarks>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteDataSet(System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with <paramref name="parameterValues" /> and returns the results in a new <see cref="T:System.Data.DataSet" />.
            </summary>
      <param name="storedProcedureName">The stored procedure to execute.</param>
      <param name="parameterValues">An array of paramters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            A <see cref="T:System.Data.DataSet" /> with the results of the <paramref name="storedProcedureName" />.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteDataSet(System.Data.Common.DbTransaction,System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with <paramref name="parameterValues" /> as part of the <paramref name="transaction" /> and returns the results in a new <see cref="T:System.Data.DataSet" /> within a transaction.
            </summary>
      <param name="transaction">The <see cref="T:System.Data.IDbTransaction" /> to execute the command within.</param>
      <param name="storedProcedureName">The stored procedure to execute.</param>
      <param name="parameterValues">An array of paramters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            A <see cref="T:System.Data.DataSet" /> with the results of the <paramref name="storedProcedureName" />.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteNonQuery(System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> using the given <paramref name="parameterValues" /> and returns the number of rows affected.
            </summary>
      <param name="storedProcedureName">The name of the stored procedure to execute.</param>
      <param name="parameterValues">An array of paramters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>The number of rows affected</returns>
      <seealso cref="M:System.Data.IDbCommand.ExecuteScalar" />
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteNonQuery(System.Data.Common.DbTransaction,System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> using the given <paramref name="parameterValues" /> within a transaction and returns the number of rows affected.
            </summary>
      <param name="transaction">The <see cref="T:System.Data.IDbTransaction" /> to execute the command within.</param>
      <param name="storedProcedureName">The name of the stored procedure to execute.</param>
      <param name="parameterValues">An array of parameters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>The number of rows affected.</returns>
      <seealso cref="M:System.Data.IDbCommand.ExecuteScalar" />
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteReader(System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with the given <paramref name="parameterValues" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.
            </summary>
      <param name="storedProcedureName">The command that contains the query to execute.</param>
      <param name="parameterValues">An array of parameters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            An <see cref="T:System.Data.IDataReader" /> object.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteReader(System.Data.Common.DbTransaction,System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with the given <paramref name="parameterValues" /> within the given <paramref name="transaction" /> and returns an <see cref="T:System.Data.IDataReader"></see> through which the result can be read.
            It is the responsibility of the caller to close the connection and reader when finished.
            </summary>
      <param name="transaction">The <see cref="T:System.Data.IDbTransaction" /> to execute the command within.</param>
      <param name="storedProcedureName">The command that contains the query to execute.</param>
      <param name="parameterValues">An array of parameters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            An <see cref="T:System.Data.IDataReader" /> object.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteScalar(System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with the given <paramref name="parameterValues" /> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.
            </summary>
      <param name="storedProcedureName">The stored procedure to execute.</param>
      <param name="parameterValues">An array of paramters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            The first column of the first row in the result set.
            </returns>
      <seealso cref="M:System.Data.IDbCommand.ExecuteScalar" />
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.ExecuteScalar(System.Data.Common.DbTransaction,System.String,System.Object[])">
      <summary>
            Executes the <paramref name="storedProcedureName" /> with the given <paramref name="parameterValues" /> within a
            <paramref name="transaction" /> and returns the first column of the first row in the result set returned by the query. Extra columns or rows are ignored.
            </summary>
      <param name="transaction">The <see cref="T:System.Data.IDbTransaction" /> to execute the command within.</param>
      <param name="storedProcedureName">The stored procedure to execute.</param>
      <param name="parameterValues">An array of paramters to pass to the stored procedure. The parameter values must be in call order as they appear in the stored procedure.</param>
      <returns>
            The first column of the first row in the result set.
            </returns>
      <seealso cref="M:System.Data.IDbCommand.ExecuteScalar" />
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.SameNumberOfParametersAndValues(System.Data.Common.DbCommand,System.Object[])">
      <summary>
            Determines if the number of parameters in the command matches the array of parameter values.
            </summary>
      <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> containing the parameters.</param>
      <param name="values">The array of parameter values.</param>
      <returns>
        <see langword="true" /> if the number of parameters and values match; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.SetUpRowUpdatedEvent(System.Data.Common.DbDataAdapter)">
      <summary>
            Sets the RowUpdated event for the data adapter.
            </summary>
      <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter" /> to set the event.</param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.UserParametersStartIndex">
      <summary>
            Returns the starting index for parameters in a command.
            </summary>
      <returns>
            The starting index for parameters in a command.
            </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase.CheckIfNpgsqlCommand(System.Data.Common.DbCommand)">
      <summary>
            Checks if a database command is a Npgsql command and converts.
            </summary>
      <param name="command">The command.</param>
      <returns>converted NpgsqlCommand</returns>
    </member>
    <member name="T:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabaseAssembler">
      <summary>
            Represents the process to build an instance of <see cref="T:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase" /> described by configuration information.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabaseAssembler.Assemble(System.String,System.Configuration.ConnectionStringSettings,Microsoft.Practices.EnterpriseLibrary.Common.Configuration.IConfigurationSource)">
      <summary>
            Builds an instance of the concrete subtype of <see cref="T:Microsoft.Practices.EnterpriseLibrary.Data.Database" /> the receiver knows how to build, based on 
                        the provided connection string and any configuration information that might be contained by the 
                        <paramref name="configurationSource" />.
            </summary>
      <param name="name">The name for the new database instance.</param>
      <param name="connectionStringSettings">The connection string for the new database instance.</param>
      <param name="configurationSource">The source for any additional configuration information.</param>
      <returns>
            The new database instance.
            </returns>
    </member>
    <member name="P:NSoft.NFramework.Data.PostgreSql.IPostgreSqlRepository.Db">
      <summary>
            DAAB의 PostgreSql 용 Database 인스턴스
            </summary>
    </member>
    <member name="T:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync">
      <summary>
            PostgreSql Database 에 대한 DbCommand 실행을 비동기 방식으로 수행하도록 해주는 Class 입니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsyncBySqlString(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsyncBySqlString(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsyncByProcedure(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsyncByProcedure(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />를 비동기 방식으로 실행하여, 결과 셋을 <see cref="T:System.Threading.Tasks.Task`1" />로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsListAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            Multi-ResultSet일 경우에 DataTable 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteDataTableAsListAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            Multi-ResultSet일 경우에 DataTable 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteNonQueryAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <see cref="T:Npgsql.NpgsqlCommand" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 SqlComnnad 인스턴스</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteNonQueryAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 쿼리문 또는 Procecedure 명</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteNonQueryBySqlStringAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 쿼리문</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteNonQueryByProcedureAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" />을 ExecuteNonQuery 메소드로 비동기 실행을 하도록 하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 프로시져 명</param>
      <param name="parameters">파리미터 정보</param>
      <returns>실행에 영향을 받은 행의 수를 결과로 가지는 <see cref="T:System.Threading.Tasks.Task`1" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteReaderAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 <see cref="T:Npgsql.NpgsqlCommand" /> 인스턴스</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:Npgsql.NpgsqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteReaderAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 SQL 문</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:Npgsql.NpgsqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteReaderBySqlStringAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 SQL 문</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:Npgsql.NpgsqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteReaderByProcedureAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" /> 를 비동기 방식으로 실행하여, <see cref="T:System.Threading.Tasks.Task`1" />를 반환받습니다. 
            받환받은 DataReader는 꼭 Dispose() 해 주어야 Connection이 닫힙니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 Procedure 명</param>
      <param name="parameters">Command Parameters</param>
      <returns>
        <see cref="T:Npgsql.NpgsqlDataReader" />를 결과로 반환하는 <see cref="T:System.Threading.Tasks.Task" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteScalarAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="cmd">실행할 NpgsqlCommand 인스턴스</param>
      <param name="parameters">Command Parameters</param>
      <returns>Scalar 값을 결과로 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteScalarAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="query" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="query">실행할 쿼리문 또는 Procedure 명</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteScalarBySqlStringAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="sqlString" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="sqlString">실행할 쿼리문</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteScalarByProcedureAsync(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="spName" /> 를 비동기 방식으로 실행하여, Scalar 값을 반환하는 <see cref="T:System.Threading.Tasks.Task`1" />를 빌드합니다.
            </summary>
      <param name="db">DAAB의 MySQL 용 Database</param>
      <param name="spName">실행할 쿼리문</param>
      <param name="parameters">Command Parameters</param>
      <returns>결과 Scalar 값을 가지는 Task의 인스턴스</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteMapObject``1(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,System.Func{``0},NSoft.NFramework.Data.Mappers.INameMapper,System.Int32,System.Int32,System.Action{System.Data.IDataReader,``0},NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="npgsqlCommand" />를 실행하여, 결과 셋을 Persistent Object의 컬렉션으로 매핑합니다.
            </summary>
      <typeparam name="T">Persistent Object의 수형</typeparam>
      <param name="npgsqlDatabase">NpgsqlDatabase 인스턴스</param>
      <param name="npgsqlCommand">NpgsqlCommand 인스턴스</param>
      <param name="mapObjectFactory">PersistentObject 생성 Factory</param>
      <param name="nameMapper">NameMapper 인스턴스</param>
      <param name="firstResult">첫번째 결과 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 결과 갯수</param>
      <param name="additionalMapping">부가적인 매핑 작업을 수행할 델리게이트</param>
      <param name="parameters">OracleCommand에 설정할 Parameter 정보</param>
      <returns>DataReader로부터 인스턴싱된 Persistent Object의 컬렉션을 결과로 반환하는 Task</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.ExecuteMapObject``1(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,Npgsql.NpgsqlCommand,System.Func{``0},NSoft.NFramework.Data.Mappers.INameMap,System.Int32,System.Int32,System.Action{System.Data.IDataReader,``0},NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="npgsqlCommand" />를 실행하여, 결과 셋을 Persistent Object의 컬렉션으로 매핑합니다.
            </summary>
      <typeparam name="T">Persistent Object의 수형</typeparam>
      <param name="npgsqlDatabase">NpgsqlDatabase 인스턴스</param>
      <param name="npgsqlCommand">npgsqlCommand 인스턴스</param>
      <param name="mapObjectFactory">PersistentObject 생성 Factory</param>
      <param name="nameMap">NameMap 인스턴스</param>
      <param name="firstResult">첫번째 결과 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 결과 갯수</param>
      <param name="additionalMapping">부가적인 매핑 작업을 수행할 델리게이트</param>
      <param name="parameters">OracleCommand에 설정할 Parameter 정보</param>
      <returns>DataReader로부터 인스턴싱된 Persistent Object의 컬렉션을 결과로 반환하는 Task</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.GetNpgsqlCommand(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String)">
      <summary>
            쿼리 문 또는 Procedure Name을 실행할 <see cref="T:Npgsql.NpgsqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB db</param>
      <param name="query">수행할 쿼리문 또는 Procedure Name</param>
      <returns>생성한 <see cref="T:Npgsql.NpgsqlCommand" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.GetNpgsqlCommand(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,System.Boolean)">
      <summary>
            쿼리 문 또는 Procedure Name을 실행할 <see cref="T:Npgsql.NpgsqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB NpgsqlDatabase</param>
      <param name="query">수행할 쿼리문 또는 Procedure Name</param>
      <param name="discoverParams">Procedure일 경우 Parameter 빌드</param>
      <returns>생성한 <see cref="T:Npgsql.NpgsqlCommand" /></returns>
      <seealso cref="!:AdoRepositoryImplBase.GetCommand(string,bool)" />
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.GetSqlStringNpgsqlCommand(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String)">
      <summary>
            쿼리 문 <paramref name="sqlString" />을 수행할 <see cref="T:Npgsql.NpgsqlCommand" />를 생성합니다.
            </summary>
      <param name="db">DAAB NpgsqlDatabase</param>
      <param name="sqlString">수행할 쿼리문</param>
      <returns>생성한 <see cref="T:Npgsql.NpgsqlCommand" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlCommandAsync.GetProcedureNpgsqlCommand(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.String,System.Boolean)">
      <summary>
            Procedure <paramref name="spName" />를 수행할 <see cref="T:Npgsql.NpgsqlCommand" /> 를 생성합니다.
            </summary>
      <param name="db">DAAB NpgsqlDatabase</param>
      <param name="spName">Procedure name</param>
      <param name="discoverParams">discover parameters</param>
      <returns>생성한 <see cref="T:Npgsql.NpgsqlCommand" /></returns>
    </member>
    <member name="T:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl">
      <summary>
            AdoRepository for PostgreSQL Database
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.#ctor">
      <summary>
            생성자
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.#ctor(System.String)">
      <summary>
            생성자
            </summary>
      <param name="dbName">
      </param>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteDataSet(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
        <paramref name="cmd" />를 실행하여, 결과를 DataSet으로 반환합니다.
            </summary>
      <param name="cmd">실행할 <see cref="T:System.Data.Common.DbCommand" /> instance.</param>
      <param name="firstResult">첫번째 레코드의 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 레코드 수 (0 이면 무시하고, 마지막 레코드까지 가져온다</param>
      <param name="parameters">collectio of parameters of Command</param>
      <returns>결과 셋이 담긴 DataSet</returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteDataTableAsList(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            여러 ResultSet을 반환할 수 있으므로, DataTable의 컬렉션으로 반환합니다.
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteDataTable(System.Data.Common.DbCommand,System.Int32,System.Int32,NSoft.NFramework.Data.IAdoParameter[])">
      <summary>
            지정된 Command를 실행하여, DataTable을 빌드합니다.
            </summary>
      <param name="cmd">실행할 Select용 Command</param>
      <param name="firstResult">첫번째 레코드의 인덱스 (0부터 시작)</param>
      <param name="maxResults">최대 레코드 수 (0 이면 무시하고, 마지막 레코드까지 가져온다</param>
      <param name="parameters">DbCommand의 Parameter 정보</param>
      <returns>instance of <see cref="T:System.Data.DataTable" /></returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteNonQueryInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteNonQuery 메소드를 실행합니다.
            </summary>
      <param name="cmd">실행할 Command 객체</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteScalarInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteScalar 메소드를 실행합니다.
            </summary>
      <param name="cmd">실행할 Command 객체</param>
      <returns>
      </returns>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.ExecuteReaderInternal(System.Data.Common.DbCommand)">
      <summary>
            지정된 Command의 ExecuteReader 메소드를 실행합니다.
            </summary>
      <param name="cmd">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:NSoft.NFramework.Data.PostgreSql.PostgreSqlRepositoryImpl.Db">
      <summary>
            DAAB의 PostgreSql 용 Database 인스턴스
            </summary>
    </member>
    <member name="T:NSoft.NFramework.Data.PostgreSql.PostgreSqlTool">
      <summary>
            PostgreSql Database 관련 Utility Class 입니다.
            참고 : http://ydhoney.egloos.com/1972985
            </summary>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlTool.AssertIsNpgsqlCommand(System.Data.Common.DbCommand)">
      <summary>
        <paramref name="cmd" />의 수형이 <see cref="T:Npgsql.NpgsqlCommand" />수형인지 확인합니다.
            </summary>
      <param name="cmd">수형 확인할 DbCommand 인스턴스</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="cmd" />의 수형이 <see cref="T:Npgsql.NpgsqlCommand" />가 아닐 때</exception>
    </member>
    <member name="M:NSoft.NFramework.Data.PostgreSql.PostgreSqlTool.CreateNpgsqlConnection(NSoft.NFramework.Data.PostgreSql.EnterpriseLibrary.NpgsqlDatabase,System.Boolean@)">
      <summary>
            Oracle Connection을 비동기 방식으로 엽니다.
            </summary>
      <param name="db">DAAB MySqlProvider 인스턴스</param>
      <param name="newConnectionCreated">새로운 Connenction이 생성되었는지 여부</param>
      <returns>새로 연결된 <see cref="T:Npgsql.NpgsqlConnection" />의 인스턴스, 만약 연결에 실패했다면 null을 반환합니다.</returns>
    </member>
  </members>
</doc>