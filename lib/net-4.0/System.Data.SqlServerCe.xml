<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlServerCe</name>
  </assembly>
  <members>
    <member name="T:System.Data.SqlServerCe.AddOption">
      <summary>등록이 기존 데이터베이스에 추가될지, 아니면 등록이 추가될 때 새 데이터베이스가 만들어질지 여부를 결정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.ExistingDatabase">
      <summary>연결 문자열에 정의된 기존 데이터베이스에 등록을 추가합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.AddOption.CreateDatabase">
      <summary>등록이 만들어질 때 새 SQL Server Compact 데이터베이스가 만들어지도록 합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.CommitMode">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeTransaction.Commit" /> 함수로 전달될 때 CommitMode는 커밋이 발생하는 시기를 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Deferred">
      <summary>사용자가 지정한 플러시 간격 후 변경 내용이 디스크에 커밋됩니다. 기본 플러시 간격은 10초지만 <see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" />에서 수정할 수 있습니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.CommitMode.Immediate">
      <summary>변경 내용이 즉시 커밋됩니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbInsertOptions">
      <summary>
        <see cref="System.Data.SqlServerCe.SqlCeResultSet.Insert" /> 메서드를 사용할 때 사용할 옵션을 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.KeepCurrentPosition">
      <summary>새 행을 삽입한 후 현재 위치를 유지합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbInsertOptions.PositionOnInsertedRow">
      <summary>새로 삽입한 행에 커서를 배치합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbRangeOptions">
      <summary>검색할 인덱스 범위를 지정할 때 <see cref="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])" /> 메서드에서 사용하는 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart">
      <summary>범위에 startData 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd">
      <summary>범위에 endData 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveStart">
      <summary>범위에서 startData 값을 제외합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExclusiveEnd">
      <summary>범위에서 endData 값을 제외합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.ExcludeNulls">
      <summary>범위에서 null 값을 제외합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Prefix">
      <summary>startData의 값에서 시작하는 인덱스 값의 범위를 지정합니다. Prefix 옵션을 사용하는 경우 endData는 null로 설정되어야 합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Match">
      <summary>startData의 값과 일치하는 인덱스 값의 범위를 지정합니다. Match 옵션을 사용하는 경우 endData는 null로 설정되어야 합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbRangeOptions.Default">
      <summary>
        <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveStart" /> 및 <see cref="F:System.Data.SqlServerCe.DbRangeOptions.InclusiveEnd" /> 플래그를 모두 설정하는 것과 동일합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DbSeekOptions">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])" /> 메서드가 인덱스에 따라 검색하는 방법을 지정하는 옵션입니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.FirstEqual">
      <summary>인덱스 순서에 따라 인덱스에서 맨 처음 일치하는 행으로 이동합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.LastEqual">
      <summary>인덱스 순서에 따라 인덱스에서 마지막으로 일치하는 행으로 이동합니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.AfterEqual">
      <summary>인덱스에서 마지막으로 일치하는 행으로 이동합니다. 일치하는 행이 없는 경우 인덱스 순서에 따라 검색 값 이후의 값을 가진 첫째 행으로 이동합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.After">
      <summary>인덱스 순서에 따라 검색 값 이후의 값을 가진 첫째 행으로 이동합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.BeforeEqual">
      <summary>인덱스에서 맨 처음 일치하는 행으로 이동합니다. 일치하는 행이 없는 경우 인덱스 순서에 따라 검색 값 이전의 값을 가진 마지막 행으로 이동합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DbSeekOptions.Before">
      <summary>인덱스 순서에 따라 검색 값 이전의 값을 가진 마지막 행으로 이동합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.DropOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> 메서드를 사용하여 구독을 삭제할 때 데이터베이스를 그대로 둘지 또는 삭제할지를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.LeaveDatabase">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> 메서드를 사용하여 구독을 삭제할 때 사용자 테이블의 복제 시스템 테이블 및 모든 복제 시스템 열은 삭제하지만 SQL Server Compact 데이터베이스는 삭제하지 않습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.DropDatabase">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)" /> 메서드를 사용하여 구독을 삭제할 때 SQL Server Compact 데이터베이스를 삭제합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.DropOption.UnregisterSubscription">
      <summary>구독에서 SQL Server Compact 데이터베이스의 등록을 취소합니다. </summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ExchangeType">
      <summary>데이터를 게시자에만 병합할지 아니면 게시자와 구독자 간에 양방향으로 병합할지를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.None">
      <summary>
        <see cref="ExchangeType" /> 옵션이 지정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.Upload">
      <summary>구독자 변경 사항만 게시자에 병합합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ExchangeType.BiDirectional">
      <summary>게시자와 구독자 사이에 모든 변경 사항을 병합합니다. 기본 설정입니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.NetworkType">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> 또는 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> 속성을 설정할 때 사용할 네트워크 프로토콜을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.DefaultNetwork">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> 또는 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> 속성을 설정할 때 현재 구성된 Net-Library를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.TcpIpSockets">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> 또는 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> 속성을 설정할 때 TCP/IP 소켓 Net-Library를 사용합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.NetworkType.MultiProtocol">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork" /> 또는 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork" /> 속성을 설정할 때 멀티프로토콜 Net-Library를 사용합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableDownload">
      <summary>서버에서 테이블의 변경 내용을 다운로드하기 시작할 때 발생하는 이벤트에 대한 사용자 정의 대리자입니다.</summary>
      <param name="ar">
        <see cref="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)" /> 메서드가 반환하는 <see cref="T:System.IAsyncResult" /> 인터페이스입니다.</param>
      <param name="tableName">서버에서 다운로드하고 있는 테이블의 이름입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnStartTableUpload">
      <summary>서버에 테이블의 변경 내용을 업로드하기 시작할 때 발생하는 이벤트에 대한 사용자 정의 대리자입니다.</summary>
      <param name="ar">BeginSynchronize 메서드가 반환한 <see cref="T:System.IAsyncResult" /> 인터페이스입니다.</param>
      <param name="tableName">서버로 업로드하고 있는 테이블의 이름입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.OnSynchronization">
      <summary>조정기 작업 중 보고된 진행 중인 동기화 이벤트를 사용하는 사용자 정의 대리자입니다.</summary>
      <param name="ar">BeginSynchronize 메서드가 반환한 <see cref="T:System.IAsyncResult" /> 인터페이스입니다.</param>
      <param name="percentComplete">조정기가 반환하는 값으로, 조정기가 완료한 복제 작업의 비율을 나타냅니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.PurgeType">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 클래스의 <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)" /> 메서드 또는 <see cref="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)" /> 메서드를 사용할 때 메타데이터를 제거하는 데 사용할 조건을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.None">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.TimeBased">
      <summary>메타데이터가 지정된 일 수보다 오래되었는지 여부에 따라 메타데이터를 삭제하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.CsnBased">
      <summary>메타데이터를 마지막으로 수정하는 트랜잭션의 CSN(커밋 시퀀스 번호)에 따라 메타데이터를 삭제하도록 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.PurgeType.Max">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaBatchOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)" />와 관련된 행을 단일 트랜잭션에서 함께 일괄 처리할지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOff">
      <summary>SQL Server Compact에서 SQL Server에 푸시된 행을 일괄 처리하지 않음을 나타냅니다. 서버에서 각 행을 별도로 처리합니다. 기본 설정입니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaBatchOption.BatchingOn">
      <summary>SQL Server Compact에서 SQL Server에 푸시된 행을 단일 트랜잭션으로 일괄 처리함을 나타냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RdaTrackOption">
      <summary>장치에 가져온 테이블의 추적 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOff">
      <summary>SQL Server Compact이 가져온 테이블에 대한 변경 사항을 추적하지 않음을 나타냅니다. 기본 키 제약 조건이 로컬로 만들어지지 않습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn">
      <summary>SQL Server Compact이 가져온 테이블에 대한 모든 변경 사항을 추적함을 나타냅니다. <paramref name="sqlSelectString" />에 지정된 값과 관련된 PRIMARY KEY 제약 조건이 로컬 테이블에 생성됩니다. 기본 설정입니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes">
      <summary>SQL Server Compact이 가져온 테이블에 대한 모든 변경 사항을 추적함을 나타냅니다. <paramref name="sqlSelectString" />에 지정된 SQL Server 테이블에 있는 인덱스와 PRIMARY KEY 제약 조건이 로컬 테이블에 생성됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOffWithIndexes">
      <summary>SQL Server Compact이 가져온 테이블에 대한 변경 사항을 추적하지 않음을 나타냅니다. <paramref name="sqlSelectString" />에 지정된 SQL Server 테이블에 있는 인덱스와 PRIMARY KEY 제약 조건이 로컬 테이블에 생성됩니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.RepairOption">
      <summary>
        <see cref="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)" /> 메서드로 전달될 때 <see cref="T:System.Data.SqlServerCe.RepairOption" />은 수행할 데이터베이스 복구 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.DeleteCorruptedRows">
      <summary>손상된 모든 행을 수정하려고 시도하지 않고 삭제합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverCorruptedRows">
      <summary>손상된 모든 행을 삭제하지 않고 수정하려고 시도합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllPossibleRows">
      <summary>손상된 행 중 수정 가능한 행을 모두 수정합니다. 수정할 수 없는 행은 수정되지 않은 채로 유지됩니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.RepairOption.RecoverAllOrFail">
      <summary>손상된 모든 행을 수정하려고 시도합니다. 수정할 수 없는 행이 있는 경우 모든 행이 수정되지 않고 작업이 실패합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetEnumerator">
      <summary>ResultSet 개체의 레코드 컬렉션을 반복하는 데 사용할 수 있는 열거자입니다. <see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" />는 사용자 코드에서 직접 사용할 수 없습니다. <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 개체로 직접 작업하여 더 많은 기능을 얻을 수 있습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.ResultSetEnumerator" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="resultSet">열거할 레코드가 포함된 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 개체입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.Current">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 현재 레코드입니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 다음 레코드로 이동합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetEnumerator.Reset">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 첫 번째 레코드 앞에 커서를 놓습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="T:System.Data.SqlServerCe.ResultSetOptions">
      <summary>
        <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" />의 옵션을 설정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.None">
      <summary>ResultSet 옵션이 지정되지 않았습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Updatable">
      <summary>ResultSet를 업데이트할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Scrollable">
      <summary>ResultSet를 앞뒤로 스크롤할 수 있습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Sensitive">
      <summary>ResultSet가 데이터 원본의 변경 내용을 감지합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetOptions.Insensitive">
      <summary>ResultSet가 데이터 원본의 변경 내용을 감지하지 않습니다. </summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetSensitivity">
      <summary>
        <see cref="M:System.Data.SqlServerCe.ResultSetEnumerator.#ctor(System.Data.SqlServerCe.SqlCeResultSet)" />의 민감도를 설정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Asensitive">
      <summary>ResultSet에 민감도가 설정되어 있지 않습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Insensitive">
      <summary>ResultSet가 데이터 원본의 변경 내용을 감지하지 않습니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ResultSetSensitivity.Sensitive">
      <summary>ResultSet가 데이터 원본의 변경 내용을 감지합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ResultSetView">
      <summary>데이터 바인딩 인터페이스를 구현하고 사용자 인터페이스 컨트롤과 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 간의 다리 역할을 합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Columns">
      <summary>지정된 컨트롤에 바인딩될 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 열을 이름별로 가져오거나 설정합니다.</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.ResultSetView.ListChanged">
      <summary>이 이벤트는 <see cref="T:System.Data.SqlServerCe.ResultSetView" />에서 항목이 추가되거나 제거되면 발생합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.Ordinals">
      <summary>지정된 컨트롤에 바인딩될 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 열을 위치별로 가져오거나 설정합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#Count"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Add(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Clear"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Contains(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IndexOf(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Insert(System.Int32,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Item(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#Remove(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#Collections#IList#RemoveAt(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AddNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowEdit"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowNew"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#AllowRemove"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#IsSorted"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#RemoveSort"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortDirection"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SortProperty"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsChangeNotification"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSearching"></member>
    <member name="P:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#IBindingList#SupportsSorting"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])"></member>
    <member name="M:System.Data.SqlServerCe.ResultSetView.System#IDisposable#Dispose"></member>
    <member name="T:System.Data.SqlServerCe.RowView"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Dispose"></member>
    <member name="M:System.Data.SqlServerCe.RowView.Equals(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.GetHashCode"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Error"></member>
    <member name="P:System.Data.SqlServerCe.RowView.System#ComponentModel#IDataErrorInfo#Item(System.String)"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#BeginEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#CancelEdit"></member>
    <member name="M:System.Data.SqlServerCe.RowView.System#ComponentModel#IEditableObject#EndEdit"></member>
    <member name="P:System.Data.SqlServerCe.RowView.UpdatableRecord"></member>
    <member name="T:System.Data.SqlServerCe.SecurityType">
      <summary>복제하는 동안 게시자 또는 배포자에 연결할 때 사용할 보안 모드를 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.DBAuthentication">
      <summary>복제하는 동안 게시자 또는 배포자에 연결할 때 SQL Server 인증을 사용합니다. 기본값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SecurityType.NTAuthentication">
      <summary>복제하는 동안 게시자 또는 배포자에 연결할 때 Windows 통합 인증을 사용합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SnapshotTransferType">
      <summary>스냅숏 파일이 배포자에서 IIS를 실행하는 컴퓨터로 전송되는 방법을 제어합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.UNC">
      <summary>스냅숏 파일이 서버의 UNC(Universal Naming Convention) 공유에서 전송됩니다. 기본값입니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.SnapshotTransferType.FTP">
      <summary>스냅숏 파일이 FTP 프로토콜을 통해 전송됩니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeChangeTracking">
      <summary>[보안 중요] SQL Server Compact 데이터베이스의 테이블에 대한 변경 내용을 추적하는 데 사용할 수 있는 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeConnection)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="connection">데이터 원본에 대한 연결을 나타내는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.#ctor(System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
      <param name="transaction">변경 내용 추적이 실행하는 트랜잭션을 나타내는 <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.DisableTracking(System.String)">
      <summary>[보안 중요] 지정된 테이블에서 추적을 해제합니다.</summary>
      <param name="tableName">변경 내용 추적을 해제할 테이블의 이름입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 모두 해제합니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.Dispose(System.Boolean)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 클래스에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다. </summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 true이고, 관리되지 않는 리소스만 해제하려면 false입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.EnableTracking(System.String,System.Data.SqlServerCe.TrackingKeyType,System.Data.SqlServerCe.TrackingOptions)">
      <summary>[보안 중요] 지정된 테이블에서 추적을 설정합니다.</summary>
      <param name="tableName">추적을 설정할 테이블의 이름입니다.</param>
      <param name="trackingKeyType">추적된 데이터에 사용할 행 키를 지정하는 <see cref="T:System.Data.SqlServerCe.TrackingKeyType" /> 값 중 하나입니다.  행 키를 사용하면 추적 시스템에서 테이블 행을 고유하게 식별할 수 있으며 이 행 키는 ROWGUIDCOL 특성이 적용된 uniqueidentifier 형식의 열이나 테이블의 기본 키일 수 있습니다.</param>
      <param name="trackingOptions">테이블에서 추적할 데이터베이스 작업을 지정하는 비트 조합 <see cref="T:System.Data.SqlServerCe.TrackingOptions" /> 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetLastCommittedCsn">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeChangeTracking" /> 개체와 연결된 데이터 원본에 대해 마지막으로 커밋된 트랜잭션의 CSN(커밋 시퀀스 번호)를 반환합니다. </summary>
      <returns>데이터 원본의 CSN입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.GetTrackingOptions(System.String,System.Data.SqlServerCe.TrackingOptions@)">
      <summary>[보안 중요] 지정된 테이블에서 현재 추적 중인 데이터베이스 작업을 나타내는 값을 가져옵니다.</summary>
      <returns>테이블이 현재 추적되고 있으면, 즉 추적이 설정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="tableName">현재 추적 중인 작업을 검색할 테이블의 이름입니다.</param>
      <param name="trackingOptions">이 메서드가 반환되면 현재 추적 중인 작업을 나타내는 <see cref="T:System.Data.SqlServerCe.TrackingOptions" /> 값의 비트 조합을 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PackTombstoneKey(System.String,System.Object[])">
      <summary>[보안 중요] 지정된 테이블의 행 키를 삭제 표식 테이블의 행 키에 사용되는 형식으로 변환합니다.</summary>
      <returns>삭제 표식 테이블의 행 키 값을 나타내는 바이트 배열입니다.</returns>
      <param name="tableName">행이 포함된 테이블의 이름입니다.</param>
      <param name="columnValues">행 키의 열 값을 포함하는 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTombstoneTableData(System.String,System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[보안 중요] 지정된 테이블의 삭제 표식 데이터를 제거합니다.</summary>
      <param name="tableName">삭제 표식 데이터를 삭제할 테이블의 이름입니다.</param>
      <param name="pType">제거가 삭제 표식 데이터를 마지막으로 수정하는 트랜잭션의 CSN(커밋 시퀀스 번호)을 기반으로 하는지 시간을 기반으로 하는지 여부를 지정하는 <see cref="T:System.Data.SqlServerCe.PurgeType" /> 값 중 하나입니다.</param>
      <param name="retentionValue">삭제 표식 행이 유지되어야 하는 최대 제한을 지정하는 숫자입니다. 시간 기반 제거의 경우 매개 변수는 현재 날짜를 기준으로 삭제 표식 데이터를 유지할 일 수를 지정합니다. CSN 기반 제거의 경우 매개 변수는 삭제 표식 데이터를 유지할 마지막 트랜잭션의 CSN을 지정합니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.PurgeTransactionSequenceData(System.Data.SqlServerCe.PurgeType,System.Int64)">
      <summary>[보안 중요] 트랜잭션 기록 테이블에서 지정된 데이터를 제거합니다.</summary>
      <param name="pType">제거가 트랜잭션 기록 데이터를 마지막으로 수정하는 트랜잭션의 CSN(커밋 시퀀스 번호)을 기반으로 하는지 시간을 기반으로 하는지 여부를 지정하는 <see cref="T:System.Data.SqlServerCe.PurgeType" /> 값 중 하나입니다.</param>
      <param name="retentionValue">행이 유지되어야 하는 최대 제한을 지정하는 숫자입니다. 시간 기반 제거의 경우 매개 변수는 현재 날짜를 기준으로 트랜잭션 기록 데이터를 유지할 일 수를 지정합니다. CSN 기반 제거의 경우 매개 변수는 트랜잭션 기록 데이터를 유지할 마지막 트랜잭션의 CSN을 지정합니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UnpackTombstoneKey(System.String,System.Byte[])">
      <summary>[보안 중요] 삭제 표식 테이블에 사용된 행 키의 표현을 지정된 테이블에 사용된 행 키의 열 값으로 변환합니다.</summary>
      <returns>테이블에 사용된 행 키의 열 값이 포함된 개체의 배열입니다.</returns>
      <param name="tableName">테이블의 이름입니다.</param>
      <param name="tombstoneKey">삭제 표식 테이블의 행 키 값을 나타내는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeChangeTracking.UpgradePublicTracking(System.String)">
      <summary>[보안 중요] 추적이 설정된 SQL Server Compact SP2 데이터베이스의 추적 메타데이터를 Microsoft Sync Framework 서비스 팩 1(SP1) 이상 버전의 Sync Framework에서 사용할 수 있도록 업그레이드합니다.</summary>
      <returns>데이터베이스가 성공적으로 업그레이드되었거나 현재 추적되고 있지 않으면 true이고, 그렇지 않으면 false입니다. </returns>
      <param name="connectionString">데이터 원본에 대한 연결 문자열입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommand">
      <summary>데이터 원본에 대해 실행할 SQL 문을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String)">
      <summary>쿼리 텍스트를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="commandText">쿼리 텍스트입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>쿼리의 텍스트와 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="commandText">쿼리 텍스트입니다. </param>
      <param name="connection">데이터 원본에 대한 연결을 나타내는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection,System.Data.SqlServerCe.SqlCeTransaction)">
      <summary>쿼리의 텍스트, <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />, <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" /> 등을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="commandText">쿼리 텍스트입니다. </param>
      <param name="connection">데이터 원본에 대한 연결을 나타내는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />입니다. </param>
      <param name="transaction">
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />가 실행되는 트랜잭션입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Cancel">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />의 실행을 취소하려고 시도합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandText">
      <summary>데이터 원본을 실행할 SQL 문을 가져오거나 설정합니다.</summary>
      <returns>실행할 SQL 문이나 열어 놓을 기본 테이블의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandTimeout">
      <summary>명령 실행을 종료하고 오류를 생성하기 전 대기 시간을 가져오거나 설정합니다.</summary>
      <returns>SQL Server Compact에 대해 항상 0입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.CommandType">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" /> 속성을 해석하는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.CommandType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.CommandType.Text" />입니다.</returns>
      <exception cref="T:System.ArgumentException">값이 유효한 <see cref="T:System.Data.CommandType" />이 아닌 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Connection">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />의 이 인스턴스에서 사용되는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />을 가져오거나 설정합니다.</summary>
      <returns>데이터 원본과의 연결입니다. 기본값은 null입니다.</returns>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 처리되는 중에 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" /> 속성이 변경된 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.CreateParameter">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 새 인스턴스를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.DesignTimeVisible">
      <summary>Get은 항상 false를 반환하고, Set은 항상 <see cref="T:System.NotSupportedException" />을 throw합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteNonQuery">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />에 대해 SQL 문을 실행하고 영향 받는 행의 수를 반환합니다.</summary>
      <returns>영향 받는 행의 수입니다.</returns>
      <exception cref="T:System.InvalidOperationException">연결이 없는 경우-또는- 연결이 열려 있지 않은 경우-또는- 연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />를 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />에 보내고, <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />를 빌드합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />를 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />으로 보내고, <see cref="T:System.Data.CommandBehavior" /> 값 중 하나를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />를 빌드합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> 개체입니다.</returns>
      <param name="behavior">
        <see cref="T:System.Data.CommandBehavior" /> 값 중 하나입니다. </param>
      <exception cref="T:System.InvalidOperationException">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />를 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />으로 보내고 <see cref="T:System.Data.SqlServerCe.ResultSetOptions" />를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />를 빌드합니다.</summary>
      <param name="options">ResultSet를 빌드할 때 사용할 ResultSetOptions입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteResultSet(System.Data.SqlServerCe.ResultSetOptions,System.Data.SqlServerCe.SqlCeResultSet)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />를 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />으로 보내고 <see cref="T:System.Data.SqlServerCe.ResultSetOptions" />를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />를 빌드합니다.</summary>
      <param name="options">ResultSet를 빌드할 때 사용할 ResultSetOptions입니다.</param>
      <param name="resultSet">빌드할 ResultSet입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.ExecuteScalar">
      <summary>쿼리를 실행하고 쿼리에서 반환된 결과 집합의 첫 번째 행의 첫 번째 열을 반환합니다. 추가 열이나 행은 무시됩니다.</summary>
      <returns>결과 집합의 첫 번째 행의 첫 번째 열을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException">연결이 원래 참여한 컨텍스트와 다른 트랜잭션 컨텍스트 내에서 명령을 실행할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.IndexName">
      <summary>열어 놓을 인덱스를 지정합니다.</summary>
      <returns>열어 놓을 인덱스의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Parameters">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />을 가져옵니다.</summary>
      <returns>SQL 문의 매개 변수입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.Prepare">
      <summary>데이터 원본에 명령의 준비 버전이나 컴파일 버전을 만듭니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />이 설정되어 있지 않은 경우-또는-<see cref="P:System.Data.SqlServerCe.SqlCeCommand.Connection" />이 <see cref="M:System.Data.SqlServerCe.SqlCeConnection.Open" />이 아닌 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.SetRange(System.Data.SqlServerCe.DbRangeOptions,System.Object[],System.Object[])">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />가 읽을 행의 집합을 제한합니다.</summary>
      <param name="dbRangeOptions">범위를 지정할 때 사용하는 옵션입니다. </param>
      <param name="startData">범위의 시작 키 값입니다. </param>
      <param name="endData">범위의 종료 키 값입니다. </param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Data.SqlServerCe.SqlCeCommand.IndexName" /> 속성이 설정되어 있지 않은 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommand.System#ICloneable#Clone"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.Transaction">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />가 실행되는 트랜잭션을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeTransaction" />입니다. 기본값은 null입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommand.UpdatedRowSource">
      <summary>
        <see cref="T:System.Data.Common.DbDataAdapter" />의 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 메서드에 의해 사용될 때 명령 결과가 <see cref="T:System.Data.DataRow" />에 적용되는 방법을 가져오거나 설정합니다. 이 속성을 .NET Compact Framework Data Provider for SQL Server Compact에서 사용해서는 안 됩니다.</summary>
      <returns>
        <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나입니다. 기본값은 Both입니다. 명령이 자동으로 생성되는 경우 기본값은 None입니다.</returns>
      <exception cref="T:System.ArgumentException">입력된 값이 <see cref="T:System.Data.UpdateRowSource" /> 값 중 하나가 아닌 경우 </exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeCommandBuilder">
      <summary>관련 데이터베이스를 사용하여 <see cref="T:System.Data.DataSet" />에 변경한 내용을 조정하는 데 사용되는 단일 테이블 명령을 자동으로 생성하는 방법을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.#ctor(System.Data.SqlServerCe.SqlCeDataAdapter)">
      <summary>관련된 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 및 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="adapter">
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 이름입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogLocation">
      <summary>SQL Server Compact에서는 지원되지 않습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.CatalogSeparator">
      <summary>SQL Server Compact에서는 지원되지 않습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.ConflictOption">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommandBuilder" />가 사용할 <see cref="T:System.Data.ConflictOption" />을 지정합니다. </summary>
      <returns>
        <see cref="T:System.Data.ConflictOption" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.DataAdapter">
      <summary>SQL 문이 자동으로 생성되는 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetDeleteCommand">
      <summary>응용 프로그램에서 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 호출하면, 데이터베이스에서 삭제를 수행하는 데 필요한 자동 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 가져옵니다.</summary>
      <returns>삭제하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetInsertCommand">
      <summary>응용 프로그램에서 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 호출하면, 데이터베이스에서 삽입을 수행하는 데 필요한 자동 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 가져옵니다.</summary>
      <returns>삽입하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.GetUpdateCommand">
      <summary>응용 프로그램에서 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 호출하면, 데이터베이스에서 업데이트를 수행하는 데 필요한 자동 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 가져옵니다.</summary>
      <returns>업데이트하는 데 필요한 자동으로 생성된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteIdentifier(System.String)">
      <summary>지정된 식별자의 따옴표 붙은 올바른 형식을 반환합니다.</summary>
      <returns>식별자의 따옴표 붙은 형식입니다.</returns>
      <param name="unquotedIdentifier">따옴표 붙은 형식을 반환할 식별자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unquotedIdentifier" />가 null인 경우</exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuotePrefix">
      <summary>이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 SQL Server 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 시작 문자를 가져오거나 설정합니다.</summary>
      <returns>사용할 시작 문자입니다. 기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.InvalidOperationException">INSERT, UPDATE 또는 DELETE 명령이 생성된 후 이 속성을 변경할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.QuoteSuffix">
      <summary>이름에 공백 또는 예약된 토큰과 같은 문자가 포함된 SQL Server 데이터베이스 개체(예: 테이블 또는 열)를 지정할 때 사용할 끝 문자를 가져오거나 설정합니다.</summary>
      <returns>사용할 끝 문자입니다. 기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.InvalidOperationException">INSERT, UPDATE 또는 DELETE 명령이 생성된 후 이 속성을 변경할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeCommandBuilder.SchemaSeparator">
      <summary>SQL Server Compact에서는 지원되지 않습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>지정된 식별자의 따옴표가 없는 올바른 형식을 반환합니다.</summary>
      <returns>모든 따옴표가 제거된 식별자입니다.</returns>
      <param name="quotedIdentifier">따옴표가 없는 형식을 반환할 식별자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="quotedIdentifier" />가 null인 경우</exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnection">
      <summary>SQL Server Compact 데이터 원본에 대해 열려 있는 연결을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.#ctor(System.String)">
      <summary>지정된 연결 문자열을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="connectionString">데이터베이스를 여는 데 사용하는 연결입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction">
      <summary>데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>현재 <see cref="T:System.Data.IsolationLevel" /> 값을 사용하여 데이터베이스 트랜잭션을 시작합니다.</summary>
      <returns>새 트랜잭션을 나타내는 개체입니다.</returns>
      <param name="isolationLevel">이 연결에 대한 트랜잭션 격리 수준입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.ChangeDatabase(System.String)">
      <summary>열려 있는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />의 현재 데이터베이스를 변경합니다.</summary>
      <param name="value">데이터베이스 이름입니다. </param>
      <exception cref="T:System.ArgumentException">데이터베이스 이름이 잘못된 경우 </exception>
      <exception cref="T:System.InvalidOperationException">연결이 열려 있지 않은 경우 </exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">데이터베이스를 변경할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Close">
      <summary>데이터 원본에 대한 연결을 닫습니다. 이것은 열려 있는 연결을 닫는 기본 설정 메서드입니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString">
      <summary>데이터베이스를 여는 데 사용되는 문자열을 가져오거나 설정합니다.</summary>
      <returns>초기 연결을 설정하는 데 필요한 데이터 원본 이름과 기타 매개 변수를 포함하는 .NET Compact Framework Data Provider for SQL Server Compact 연결 문자열입니다. 기본값은 빈 문자열입니다.</returns>
      <exception cref="T:System.ArgumentException">잘못된 연결 문자열 인수를 제공한 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionTimeout">
      <summary>연결 설정을 시도할 때 시도를 종료하고 오류를 생성하기 전까지의 대기 시간을 가져옵니다.</summary>
      <returns>연결이 열릴 때까지 대기하는 시간(초)입니다. SQL Server Compact에서 이 값은 항상 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.CreateCommand">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />과 관련된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체를 만들고 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.Database">
      <summary>현재 데이터베이스 이름이나 연결되었을 때 사용할 데이터베이스의 이름을 가져옵니다.</summary>
      <returns>현재 데이터베이스 이름이나 연결되었을 때 사용할 데이터베이스의 이름입니다. 기본값은 빈 문자열입니다. SQL Server Compact에서 이 속성의 값은 "\myApp\myDB.sdf"와 같이 데이터베이스 파일의 전체 경로여야 합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DatabaseIdentifier">
      <summary>동기화하는 동안 현재 데이터베이스의 고유 식별자를 가져옵니다.</summary>
      <returns>현재 데이터베이스의 고유 식별자입니다. </returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.DataSource">
      <summary>데이터 원본의 파일 이름을 가져옵니다. </summary>
      <returns>데이터 원본의 위치와 파일 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Dispose">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 클래스의 현재 인스턴스에서 사용하는 리소스를 모두 해제합니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>지정된 <see cref="T:System.Transactions.Transaction" />에 참여합니다.</summary>
      <param name="SysTrans">참여할 트랜잭션입니다.</param>
      <exception cref="T:System.InvalidOperationException">연결이 이미 로컬 트랜잭션에 참여하고 있는 경우-또는-연결이 트랜잭션에 참여할 수 없는 경우</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="SysTrans" />가 null인 경우</exception>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure">
      <summary>백그라운드 플러시가 실패하면 발생합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetDatabaseInfo">
      <summary>연결된 데이터베이스의 로캘, 암호화 모드 및 대/소문자 구분 설정에 대한 정보와 함께 키 값 쌍의 집합을 반환합니다.</summary>
      <returns>로캘, 암호화 모드 및 대/소문자 구분의 이름 값 쌍이 포함된 정렬된 목록입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema">
      <summary>이 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />의 데이터 원본에 대한 스키마 정보를 반환합니다.</summary>
      <returns>스키마 정보가 포함된 <see cref="T:System.Data.DataTable" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String)">
      <summary>스키마 이름의 지정된 문자열을 사용하여 이 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />의 데이터 원본에 대한 스키마 정보를 반환합니다.</summary>
      <returns>스키마 정보가 포함된 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <param name="collectionName">스키마 이름입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.GetSchema(System.String,System.String[])">
      <summary>스키마 이름의 지정된 문자열과 제한 값의 지정된 문자열 배열을 사용하여 이 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />의 데이터 원본에 대한 스키마 정보를 반환합니다.</summary>
      <returns>스키마 정보가 포함된 <see cref="T:System.Data.DataTable" />입니다.</returns>
      <param name="collectionName">스키마 이름입니다.</param>
      <param name="restrictionValues">제한 값의 집합입니다.</param>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage">
      <summary>.NET Compact Framework Data Provider for SQL Server가 경고 또는 정보 메시지를 보내면 발생합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnection.Open">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeConnection.ConnectionString" />이 지정하는 속성 설정을 사용하여 데이터베이스 연결을 엽니다.</summary>
      <exception cref="T:System.InvalidOperationException">연결이 이미 열려 있는 경우 </exception>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">연결을 여는 동안 연결 수준 오류가 발생한 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.ServerVersion">
      <summary>데이터베이스 버전 번호를 문자열로 반환합니다.</summary>
      <returns>SQL Server Compact의 버전 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnection.State">
      <summary>연결의 현재 상태를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.ConnectionState" /> 값의 비트 조합입니다. 기본값은 Closed입니다.</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeConnection.StateChange">
      <summary>연결 상태가 변경되면 발생합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 클래스에서 사용하는 연결 문자열의 내용을 만들고 관리하는 간단한 방법을 제공합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.#ctor(System.String)">
      <summary>인스턴스의 내부 연결 정보에 대한 데이터를 제공하는 지정된 연결 문자열을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="connectionString">연결 문자열입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.AutoshrinkThreshold">
      <summary>자동 축소가 시작되기 전 허용되는 데이터베이스 파일의 사용 가능한 공간 비율을 가져오거나 설정합니다.</summary>
      <returns>값이 100이면 자동 축소가 사용되지 않습니다. 값을 지정하지 않으면 60이 기본값으로 사용됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.CaseSensitive">
      <summary>데이터베이스 데이터 정렬이 대/소문자를 구분하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>데이터베이스가 대/소문자를 구분하면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Clear">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 인스턴스의 내용을 지웁니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 특정 키가 포함되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 지정된 키가 있는 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에서 찾을 키입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DataSource">
      <summary>SQL Server Compact 데이터베이스의 파일 경로 및 이름을 가져오거나 설정합니다.</summary>
      <returns>SQL Server Compact 데이터베이스의 파일 경로 및 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockEscalation">
      <summary>행에서 페이지로 또는 페이지에서 테이블로 에스컬레이션을 시도하기 전 트랜잭션이 가져올 잠금 수를 가져오거나 설정합니다.</summary>
      <returns>행에서 페이지로 또는 페이지에서 테이블로 에스컬레이션을 시도하기 전 트랜잭션이 가져올 잠금 수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.DefaultLockTimeout">
      <summary>트랜잭션의 기본 잠금 대기 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>트랜잭션의 잠금 대기 시간(밀리초)입니다. 값을 지정하지 않으면 2000이 기본값으로 사용됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Encrypt">
      <summary>데이터베이스가 암호화되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>데이터베이스가 암호화되면 true이고, 그렇지 않으면 false입니다. 암호화를 사용하려면 true로 설정하고 사용하지 않으려면 false로 설정해야 합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.EncryptionMode">
      <summary>데이터베이스를 만들 암호화 모드를 가져오거나 설정합니다.</summary>
      <returns>데이터베이스를 만들 암호화 모드입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Enlist">
      <summary>Enlist를 사용하여 연결 데이터베이스가 열리는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>Enlist를 사용하여 연결 데이터베이스가 열리면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FileMode">
      <summary>데이터베이스 파일을 열 때 사용할 모드를 가져오거나 설정합니다.</summary>
      <returns>데이터베이스 파일을 열 때 사용할 모드 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.FlushInterval">
      <summary>커밋된 모든 트랜잭션이 디스크로 플러시되기 전의 지정된 간격(초)을 가져오거나 설정합니다.</summary>
      <returns>지정된 간격(초)입니다. 값을 지정하지 않으면 10이 기본값으로 사용됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.InitialLcid">
      <summary>데이터베이스에 사용할 LCID(로캘 ID)를 가져오거나 설정합니다.</summary>
      <returns>LCID(로캘 ID)의 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.IsFixedSize">
      <summary>SqlCeConnectionStringBuilder의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>SqlCeConnectionStringBuilder의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Item(System.String)">
      <summary>지정된 키와 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>지정된 키와 연결된 값입니다.</returns>
      <param name="keyword">가져오거나 설정할 항목의 키입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Keys">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 키를 포함하는 ICollection을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 키를 포함하는 ICollection입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxBufferSize">
      <summary>SQL Server Mobile에서 디스크에 변경 사항을 플러시하기 전에 사용할 수 있는 최대 메모리(KB)를 가져오거나 설정합니다.</summary>
      <returns>최대 메모리(KB)입니다. 값을 지정하지 않으면 640이 기본값으로 사용됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.MaxDatabaseSize">
      <summary>데이터베이스의 최대 크기(MB)를 가져오거나 설정합니다.</summary>
      <returns>데이터베이스의 최대 크기(MB)입니다. 기본값은 128입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Password">
      <summary>길이가 최대 40자일 수 있는 데이터베이스 암호를 가져오거나 설정합니다.</summary>
      <returns>데이터베이스 암호의 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.PersistSecurityInfo">
      <summary>암호와 같은 보안 관련 정보가 연결의 일부로 반환되지 않는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>보안 관련 정보가 연결의 일부로 반환되면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Remove(System.String)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 인스턴스에서 지정된 키가 있는 항목을 제거합니다.</summary>
      <returns>키가 연결 문자열 내에 있어서 제거되었으면 true이고, 키가 없으면 false입니다.</returns>
      <param name="keyword">이 <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />의 연결 문자열에서 제거할 키/값 쌍의 키입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>지정된 키가 이 <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" /> 인스턴스에 있는지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 지정된 키가 있는 항목이 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyword">
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에서 찾을 키입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFileMaxSize">
      <summary>임시 데이터베이스 파일의 최대 크기(MB)를 가져오거나 설정합니다.</summary>
      <returns>임시 데이터베이스 파일의 최대 크기(MB)입니다. 기본값은 128입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TempFilePath">
      <summary>임시 데이터베이스의 위치를 가져오거나 설정합니다.</summary>
      <returns>임시 데이터베이스의 위치입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>이 <see cref="T:System.Data.SqlServerCe.SqlCeconnectionStringBuilder" />에서 제공된 키에 해당하는 값을 검색합니다.</summary>
      <returns>키워드가 연결 문자열에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="keyword">검색할 항목의 키입니다.</param>
      <param name="value">키워드에 해당하는 값입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeConnectionStringBuilder.Values">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 값을 포함하는 ICollection을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnectionStringBuilder" />에 값을 포함하는 ICollection입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataAdapter">
      <summary>
        <see cref="T:System.Data.DataSet" />을 채우고 데이터 원본을 업데이트하는 데 사용되는 데이터 명령 집합 및 데이터베이스 연결을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.Data.SqlServerCe.SqlCeCommand)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> 속성으로 지정된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="selectCommand">SELECT 문인 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다. 이 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />는 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> 속성으로 설정됩니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.Data.SqlServerCe.SqlCeConnection)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> 및 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 개체를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="selectCommandText">
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />에 대한 <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> 속성의 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />로 사용될 SQL SELECT 문인 <see cref="T:System.String" />입니다. </param>
      <param name="selectConnection">해당 연결을 나타내는 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" />와 연결 문자열을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="selectCommandText">
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />에 대한 <see cref="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand" /> 속성의 <see cref="P:System.Data.SqlServerCe.SqlCeCommand.CommandText" />로 사용될 SQL SELECT 문인 <see cref="T:System.String" />입니다. </param>
      <param name="selectConnectionString">연결 문자열입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.DeleteCommand">
      <summary>데이터 집합에서 레코드를 삭제하기 위한 SQL 문을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" />의 삭제된 행에 해당하는 데이터 원본의 레코드를 삭제하기 위해 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 작업 동안 사용되는 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.Dispose">
      <summary>현재 인스턴스를 삭제합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.InsertCommand">
      <summary>데이터 원본에 새 레코드를 삽입하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" />의 새 행에 해당하는 데이터 원본의 레코드를 삽입하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 호출하는 동안 데이터 원본에 대한 업데이트 명령이 실행된 후 발생합니다. 즉 업데이트를 시도하면 이 이벤트가 발생합니다.</summary>
    </member>
    <member name="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 호출하는 동안 데이터 원본에 대한 업데이트 명령이 실행되기 전에 발생합니다. 즉 업데이트를 시도하면 이 이벤트가 발생합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.SelectCommand">
      <summary>데이터 원본에서 레코드를 선택하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" /> 작업을 수행하는 동안 <see cref="T:System.Data.DataSet" />에 배치하기 위해 데이터 원본에서 레코드를 선택하는 데 사용되는 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataAdapter.System#ICloneable#Clone">
      <summary>이 멤버에 대한 설명은 <see cref="M:System.ICloneable.Clone" />을 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Object" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataAdapter.UpdateCommand">
      <summary>데이터 원본에서 레코드를 업데이트하는 데 사용되는 SQL 문을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" />의 수정된 행에 해당하는 데이터 원본의 레코드를 업데이트하는 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 사용된 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeDataReader">
      <summary>데이터 원본에서 데이터 행의 정방향 전용 스트림을 읽는 방법을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Close">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" /> 개체를 닫습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Depth">
      <summary>현재 행의 중첩 수준을 나타내는 값을 가져옵니다.</summary>
      <returns>현재 행의 중첩 수준입니다. .NET Framework Data Provider for SQL Server Compact는 중첩을 지원하지 않으므로 항상 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose">
      <summary>이 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />에서 소비한 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Dispose(System.Boolean)">
      <summary>이 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스도 선택적으로 해제합니다.</summary>
      <param name="disposing">관리되는 리소스를 해제할지 여부를 지정합니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.FieldCount">
      <summary>쿼리의 SELECT 절에 있는 열의 수를 가져옵니다.</summary>
      <returns>유효한 레코드 집합에 위치하지 않은 경우에는 0이고, 그렇지 않으면 현재 레코드에 있는 열의 수입니다. </returns>
      <exception cref="T:System.InvalidOperationException">데이터 원본에 대한 연결이 현재 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Finalize">
      <summary>가비지 수집에 의해 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBoolean(System.Int32)">
      <summary>지정된 열의 값을 부울로 가져옵니다.</summary>
      <returns>열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetByte(System.Int32)">
      <summary>지정된 열의 값을 바이트로 가져옵니다.</summary>
      <returns>바이트로 지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 바이트의 스트림을 읽습니다.</summary>
      <returns>읽은 실제 바이트 수입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <param name="dataIndex">읽기 작업을 시작하는 필드 내의 인덱스입니다. </param>
      <param name="buffer">바이트 스트림을 읽어올 버퍼입니다. </param>
      <param name="bufferIndex">읽기 작업을 시작할 <paramref name="buffer" />의 인덱스입니다. </param>
      <param name="length">버퍼로 복사할 최대 길이입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChar(System.Int32)">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact에서는 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.Char" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 버퍼 오프셋에서 시작하는 배열로서 지정된 열 오프셋에서 버퍼로 문자의 스트림을 읽습니다.</summary>
      <returns>읽은 실제 문자 수입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <param name="dataIndex">읽기 작업을 시작하는 행 내의 인덱스입니다. </param>
      <param name="buffer">데이터를 복사해 올 버퍼입니다. </param>
      <param name="bufferIndex">읽기 작업을 시작할 <paramref name="buffer" />의 인덱스입니다. </param>
      <param name="length">읽을 문자 수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDataTypeName(System.Int32)">
      <summary>원본 데이터 형식의 이름을 가져옵니다.</summary>
      <returns>백 엔드 데이터 형식의 이름입니다.</returns>
      <param name="index">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDateTime(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.DateTime" /> 개체로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDecimal(System.Int32)">
      <summary>지정된 열의 값을 <see cref="T:System.Decimal" /> 개체로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetDouble(System.Int32)">
      <summary>지정된 열의 값을 배정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetEnumerator">
      <returns>
        <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFieldType(System.Int32)">
      <summary>개체의 데이터 형식인 <see cref="T:System.Type" />을 가져옵니다.</summary>
      <returns>개체의 데이터 형식인 <see cref="T:System.Type" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetFloat(System.Int32)">
      <summary>지정된 열의 값을 단정밀도 부동 소수점 숫자로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetGuid(System.Int32)">
      <summary>지정된 열의 값을 GUID(Globally Unique Identifier)로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt16(System.Int32)">
      <summary>지정된 열의 값을 16비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt32(System.Int32)">
      <summary>지정된 열의 값을 32비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetInt64(System.Int32)">
      <summary>지정된 열의 값을 64비트 부호 있는 정수로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetName(System.Int32)">
      <summary>지정된 열의 이름을 가져옵니다.</summary>
      <returns>지정된 열의 이름입니다.</returns>
      <param name="index">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetOrdinal(System.String)">
      <summary>열 이름이 지정된 경우 열 서수를 가져옵니다.</summary>
      <returns>0부터 시작하는 열 서수입니다.</returns>
      <param name="name">열의 이름입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정된 이름이 유효한 열 이름이 아닌 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>내부 공급자별 필드 형식의 표현인 <see cref="T:System.Object" />를 가져옵니다.</summary>
      <returns>지정된 열의 데이터 형식을 설명하는 <see cref="T:System.Type" /> 개체입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSchemaTable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />의 열 메타데이터를 설명하는 <see cref="T:System.Data.DataTable" />을 반환합니다.</summary>
      <returns>열 메타데이터를 설명하는 <see cref="T:System.Data.DataTable" />을 반환합니다.</returns>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBinary(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlBinary" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlBoolean(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlBoolean" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlByte(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlByte" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlByte" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDateTime(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDateTime" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDecimal(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDecimal" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlDouble(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlDouble" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlGuid(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlGuid" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt16(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt16" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt32(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt32" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlInt64(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlInt64" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlMoney(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlMoney" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlSingle(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlSingle" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetSqlString(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlTypes.SqlString" />으로 지정된 열 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlTypes.SqlString" />입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetString(System.Int32)">
      <summary>지정된 열의 값을 문자열로 가져옵니다.</summary>
      <returns>지정된 열의 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidCastException">지정된 캐스트가 잘못된 경우 </exception>
      <exception cref="T:System.Data.SqlTypes.SqlNullValueException">값이 null인 경우 </exception>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValue(System.Int32)">
      <summary>지정된 서수에서 네이티브 형식으로 열의 값을 가져옵니다.</summary>
      <returns>반환할 값입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.GetValues(System.Object[])">
      <summary>현재 행에 있는 모든 특성 열을 가져옵니다.</summary>
      <returns>배열에 있는 <see cref="T:System.Object" />의 인스턴스 수입니다.</returns>
      <param name="values">특성 열을 복사해 올 <see cref="T:System.Object" />의 배열입니다. </param>
      <exception cref="T:System.InvalidOperationException">작업이 유효하지 않은 경우. <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />는 결과 집합의 마지막 행 뒤에 올 수 있습니다. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HasRows">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />에 하나 이상의 행이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.HiddenFieldCount">
      <returns>
        <see cref="T:System.Int32" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.IsClosed">
      <summary>데이터 판독기가 닫혔는지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />가 닫혔으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsCommandBehavior(System.Data.CommandBehavior)">
      <summary>지정된 <see cref="T:System.Data.CommandBehavior" />가 이 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />의 명령 동작과 일치하는지 여부를 확인합니다.</summary>
      <returns>동작이 일치하면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="condition">명령 동작입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.IsDBNull(System.Int32)">
      <summary>열이 존재하지 않거나 없는 값을 포함하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>지정된 열 값이 <see cref="T:System.DBNull" />과 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">0부터 시작하는 열 서수입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.Int32)">
      <summary>열 서수가 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <returns>지정된 열의 네이티브 형식 값입니다.</returns>
      <param name="index">열 서수입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.Item(System.String)">
      <summary>열 이름이 지정된 경우, 지정된 열의 값을 네이티브 형식으로 가져옵니다.</summary>
      <returns>지정된 열의 네이티브 형식 값입니다.</returns>
      <param name="name">열 이름입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.NextResult">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact에서는 지원되지 않습니다.</summary>
      <returns>
        <see cref="T:System.Boolean" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Read">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />를 다음 레코드로 이동합니다.</summary>
      <returns>행이 더 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeDataReader.RecordsAffected">
      <summary>SQL 문으로 변경, 삽입 또는 삭제된 열의 수를 가져옵니다.</summary>
      <returns>변경, 삽입 또는 삭제된 행의 수이거나, 행이 영향을 받지 않았거나 문이 실패했으면 0이고, SELECT 문의 경우에는 -1입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeDataReader.Seek(System.Data.SqlServerCe.DbSeekOptions,System.Object[])">
      <summary>지정된 매개 변수와 일치하는 인덱싱된 값을 가진 레코드에 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />를 적용합니다.</summary>
      <returns>부울 값. true는 커서가 행에 있음을 나타냅니다.</returns>
      <param name="dbSeekOptions">사용할 <see cref="T:System.Data.SqlServerCe.DbSeekOptions" />입니다.</param>
      <param name="index">레코드의 인덱스입니다.</param>
      <exception cref="T:System.Data.SqlServerCe.SqlCeException">값을 찾을 수 없거나 다른 오류가 발생한 경우 </exception>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeEngine">
      <summary>SQL Server Compact Engine 개체의 속성, 메서드 및 기타 개체를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.#ctor(System.String)">
      <summary>지정된 로컬 연결 문자열을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Compact(System.String)">
      <summary>기존 파일로부터 새 데이터베이스 파일을 만드는 방식으로 SQL Server Compact 데이터베이스의 불필요한 공간을 회수합니다. 이 메서드는 또한 데이터베이스의 데이터 정렬 순서, 암호화 또는 암호 설정을 변경하는 데 사용됩니다. </summary>
      <param name="connectionString">대상 데이터베이스에 대한 연결 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.CreateDatabase">
      <summary>새 데이터베이스를 만듭니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Dispose">
      <summary>모든 SQL Server Compact <see cref="T:System.Data.SqlServerCe.SqlCeEngine" /> 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeEngine.LocalConnectionString">
      <summary>SQL Server Compact 데이터베이스의 연결 문자열을 가져오거나 설정합니다.</summary>
      <returns>연결 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Repair(System.String,System.Data.SqlServerCe.RepairOption)">
      <summary>손상된 데이터베이스를 복구합니다.</summary>
      <param name="connectionString">데이터베이스에 대한 로컬 연결 문자열입니다.</param>
      <param name="options">데이터베이스를 복구할 때 사용할 RepairOption입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Shrink">
      <summary>빈 페이지를 파일 끝으로 이동하고 파일을 자르는 방식으로 SQL Server Compact 데이터베이스의 불필요한 공간을 회수합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade">
      <summary>SQL Server Compact 데이터베이스를 버전 3.1에서 3.5로 업그레이드합니다. 업그레이드한 이후 원본 데이터베이스가 암호화되면 이 업그레이드된 데이터베이스도 암호화됩니다. 반대로 원본 데이터베이스가 암호화되지 않으면 업그레이드된 데이터베이스도 암호화되지 않습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Upgrade(System.String)">
      <summary>SQL Server Compact 데이터베이스를 버전 3.1에서 3.5로 업그레이드합니다. 암호화 모드가 대상 연결 문자열에 지정되어 있으면 대상 데이터베이스가 암호화됩니다. 연결 문자열에서 대/소문자 구분 속성이 true로 설정되어 있으면 데이터베이스의 데이터 정렬이 대/소문자를 구분합니다.</summary>
      <param name="destConnectionString">대상 데이터베이스에 대한 연결 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify">
      <summary>데이터베이스의 각 페이지에 대한 체크섬을 다시 계산하고 새 체크섬을 예상 값과 비교합니다.</summary>
      <returns>체크섬이 일치하고 데이터베이스 손상이 없으면 true이고, 그렇지 않으면 false입니다. </returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeEngine.Verify(System.Data.SqlServerCe.VerifyOption)">
      <summary>VerifyOption에 따라 데이터베이스의 무결성을 확인합니다.</summary>
      <returns>데이터베이스 손상이 없으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="option">사용할 데이터베이스 확인의 수준을 결정합니다. 사용할 수 있는 옵션 값에 대한 자세한 내용은 <see cref="T:System.Data.SqlServerCe.VerifyOption" />을 참조하십시오.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeError">
      <summary>데이터 원본이 반환한 경고 또는 오류와 관련된 정보를 수집합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.ErrorParameters">
      <summary>오류 매개 변수 중 마지막 세 개를 가져옵니다. 오류 매개 변수는 SQL Server Compact에서 오류에 대한 자세한 내용을 제공하는 데 사용됩니다.</summary>
      <returns>오류 매개 변수 중 마지막 세 개를 포함하는 문자열 배열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.HResult">
      <summary>오류의 형식을 식별하는 HRESULT 값을 반환합니다.</summary>
      <returns>오류의 형식을 식별하는 HR 번호입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Message">
      <summary>오류를 설명하는 텍스트를 가져옵니다.</summary>
      <returns>오류를 설명하는 텍스트입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NativeError">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 네이티브 오류 번호를 가져옵니다. 이러한 오류에 대한 자세한 내용은 SQL Server Compact 온라인 설명서의 "문제 해결" 단원에서 "SQL Server Compact 오류" 항목을 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 네이티브 오류 번호입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.NumericErrorParameters">
      <summary>오류 매개 변수 중 처음 세 개를 가져옵니다. 오류 매개 변수는 SQL Server Compact에서 오류에 대한 자세한 내용을 제공하는 데 사용됩니다.</summary>
      <returns>오류 매개 변수 중 처음 세 개를 포함하는 정수 배열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeError.Source">
      <summary>오류를 생성한 공급자의 이름을 가져옵니다.</summary>
      <returns>오류를 생성한 공급자의 이름입니다. 예를 들어, <see cref="P:System.Data.SqlServerCe.SqlCeError.Source" /> 속성은 "OLE DB Provider for SQL Server Compact" 등의 문자열을 반환할 수 있습니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeError.ToString">
      <summary>오류 메시지의 전체 텍스트를 가져옵니다.</summary>
      <returns>오류 메시지의 전체 텍스트입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeErrorCollection">
      <summary>.NET Framework Data Provider for SQL Server Compact에서 생성된 오류를 모두 수집합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Array" /> 내의 지정된 인덱스에서 시작하여 <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">요소를 복사해서 보낼 <see cref="T:System.Array" />입니다. </param>
      <param name="index">
        <paramref name="array" />의 시작 인덱스입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" />와 <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />의 요소 수의 합계가 <see cref="T:System.Array" />의 <see cref="P:System.Array.Length" />보다 큰 경우 </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="array" />의 <paramref name="index" />가 잘못된 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Count">
      <summary>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeError" /> 개체의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeError" /> 개체의 총수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeErrorCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />에서 반복할 수 있는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />
      </returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.Item(System.Int32)">
      <summary>지정된 인덱스의 오류를 가져옵니다.</summary>
      <returns>지정된 인덱스에 있는 오류를 포함하는 <see cref="T:System.Data.SqlServerCe.SqlCeError" />입니다.</returns>
      <param name="index">검색할 <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 인덱스(0부터 시작)입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeErrorCollection.System#Collections#ICollection#SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeException">
      <summary>내부 공급자가 SQL Server Compact 데이터 원본에서 경고 또는 오류를 반환할 때 throw되는 예외입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>직렬화에 도움이 되는 생성자입니다.</summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Errors">
      <summary>.NET Compact Framework Data Provider for SQL Server Compact에서 생성된 예외에 대한 자세한 정보가 들어 있는 하나 이상의 <see cref="T:System.Data.SqlServerCe.SqlCeError" /> 개체로 구성된 컬렉션을 가져옵니다.</summary>
      <returns>예외에 대한 <see cref="T:System.Data.SqlServerCe.SqlCeError" /> 클래스의 수집된 인스턴스를 포함하는 <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[보안 중요] <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 개체를 직렬화하는 데 필요한 데이터로 채웁니다.</summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.HResult">
      <summary>예외의 HRESULT 값을 가져옵니다. 이 값은 예외에 대한 <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 첫 번째 인스턴스에 대한 <see cref="P:System.Data.SqlServerCe.SqlCeError.HResult" /> 값과 같습니다.</summary>
      <returns>HRESULT 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Message">
      <summary>예외에 대한 <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 첫 번째 인스턴스를 설명하는 텍스트를 가져옵니다.</summary>
      <returns>오류를 설명하는 텍스트입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.NativeError">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeErrorCollection" />에 있는 첫 번째 <see cref="T:System.Data.SqlServerCe.SqlCeError" />의 네이티브 오류 번호를 가져옵니다. 오류에 대한 자세한 내용은 SQL Server Compact 온라인 설명서의 "문제 해결" 단원에서 "SQL Server Compact 오류" 항목을 참조하십시오.</summary>
      <returns>
        <see cref="T:System.Int32" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeException.Source">
      <summary>오류가 발생한 OLE DB 공급자의 이름을 가져옵니다.</summary>
      <returns>오류가 발생한 OLE DB 공급자의 이름입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> 이벤트의 이벤트 인수를 캡슐화합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Errors">
      <summary>플러시에 실패하도록 한 <see cref="T:System.Data.SqlServerCe.SqlCeError" /> 개체의 컬렉션입니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.Message">
      <summary>플러시에 실패하도록 한 <see cref="T:System.Data.SqlServerCe.SqlCeError" />를 설명하는 텍스트를 가져옵니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeFlushFailureEventHandler">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.FlushFailure" /> 이벤트를 수신하도록 구현해야 하는 대리자입니다.</summary>
      <param name="sender">이벤트 원본입니다.</param>
      <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Data.SqlServerCe.SqlCeFlushFailureEventArgs" />입니다. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> 이벤트에 대한 데이터를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Errors">
      <summary>데이터 원본에서 보낸 경고 컬렉션을 가져옵니다.</summary>
      <returns>데이터 원본에서 보낸 경고 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.Message">
      <summary>데이터 원본에서 보낸 오류의 전체 텍스트를 가져옵니다.</summary>
      <returns>오류의 전체 텍스트입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs.ToString">
      <summary>이 <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> 이벤트의 문자열 표현을 검색합니다.</summary>
      <returns>
        <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> 이벤트를 나타내는 문자열을 반환합니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInfoMessageEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeConnection" />의 <see cref="E:System.Data.SqlServerCe.SqlCeConnection.InfoMessage" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 원본입니다. </param>
      <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Data.SqlServerCe.SqlCeInfoMessageEventArgs" />입니다. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException">
      <summary> SQL Server Compact에서 이전 버전이나 최신 버전의 데이터베이스 파일을 열려고 시도하는 경우 내부 공급자가 Microsoft SQL Server Compact 데이터 원본에서 오류를 반환할 때 throw되는 예외입니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>직렬화에 도움이 되는 생성자입니다.</summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeInvalidDatabaseFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[보안 중요] <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 개체를 직렬화하는 데 필요한 데이터로 채웁니다. </summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeLockTimeoutException">
      <summary>이 예외는 잠금 제한 시간에 도달하면 throw됩니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>직렬화에 도움이 되는 생성자입니다. </summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeLockTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[보안 중요]  SerializationInfo를 개체를 직렬화하는 데 필요한 데이터로 채웁니다. </summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameter">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />에 대한 매개 변수와 선택적으로 <see cref="T:System.Data.DataSet" /> 열에 대한 해당 매핑을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>매개 변수 이름과 데이터 형식을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매핑할 매개 변수의 이름입니다. </param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>매개 변수 이름, 데이터 형식 및 길이를 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매핑할 매개 변수의 이름입니다. </param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>매개 변수 이름, 데이터 형식, 길이 및 기타 속성을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다. SQL Server Compact에서는 입력 매개 변수만 지원합니다.</summary>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
      <param name="isNullable">필드 값에 null을 허용하면 true이고, 그렇지 않으면 false입니다. </param>
      <param name="precision">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수점의 왼쪽과 오른쪽에 해당하는 숫자의 전체 자릿수입니다. </param>
      <param name="scale">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수 자릿수의 전체 수입니다. </param>
      <param name="sourceColumn">원본 열의 이름입니다. </param>
      <param name="sourceVersion">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. </param>
      <param name="value">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 값이 되는 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>매개 변수 이름, 데이터 형식, 길이, 매개 변수 방향 및 기타 속성을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다. SQL Server Compact에서는 입력 매개 변수만 지원합니다.</summary>
      <param name="parameterName">매개 변수의 이름입니다.</param>
      <param name="dbType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
      <param name="direction">사용할 <see cref="P:System.Data.ParameterDirection" />입니다.</param>
      <param name="isNullable">필드 값에 null을 허용하면 true이고, 그렇지 않으면 false입니다. </param>
      <param name="precision">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수점의 왼쪽과 오른쪽에 해당하는 숫자의 전체 자릿수입니다. </param>
      <param name="scale">
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수 자릿수의 전체 수입니다. </param>
      <param name="sourceColumn">원본 열의 이름입니다. </param>
      <param name="sourceVersion">
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. </param>
      <param name="value">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 값이 되는 <see cref="T:System.Object" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>매개 변수 이름, 데이터 형식, 길이 및 원본 열 이름을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매핑할 매개 변수의 이름입니다. </param>
      <param name="dataType">
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. </param>
      <param name="size">매개 변수의 길이입니다. </param>
      <param name="sourceColumn">원본 열의 이름입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.#ctor(System.String,System.Object)">
      <summary>매개 변수 이름과 새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 값을 사용하여 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">매핑할 매개 변수의 이름입니다. </param>
      <param name="value">새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 값입니다. </param>
      <exception cref="T:System.ArgumentException">매개 변수에 제공된 값을 SQL Server Compact에서 지원하는 데이터베이스 유형으로 변환할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.DbType">
      <summary>매개 변수의 <see cref="T:System.Data.DbType" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DbType" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Data.DbType.String" />입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">속성이 유효한 <see cref="T:System.Data.DbType" />으로 설정되지 않은 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Direction">
      <summary>이 속성은 .NET Compact Framework Data Provider for SQL Server Compact에 대해 항상 ParameterDirection.Input을 반환합니다. 이 속성을 다른 값으로 설정하면 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</summary>
      <returns>이 속성은 SQL Server Compact 데이터 공급자에 대해 항상 ParameterDirection.Input을 반환합니다. 이 속성 설정은 지원되지 않습니다.</returns>
      <exception cref="T:System.InvalidOperationException">사용자가 이 속성을 설정하려고 시도한 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.IsNullable">
      <summary>매개 변수가 null 값을 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>null 값이 허용되면 true이고, 그렇지 않으면 false입니다. 기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Offset"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Precision">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" /> 속성을 나타내는 데 사용된 숫자의 최대 자릿수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ResetDbType">
      <summary>이 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />와 연결된 형식을 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Scale">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수 자릿수의 수를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 확인하는 소수 자릿수의 수입니다. 기본값은 0입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Size">
      <summary>열 내부에 있는 데이터의 최대 길이를 가져오거나 설정합니다.</summary>
      <returns>열 내부에 있는 데이터의 최대 길이입니다. 기본값은 매개 변수 값에서 유추됩니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumn">
      <summary>
        <see cref="T:System.Data.DataSet" />에 매핑되어 <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 로드하거나 반환하기 위해 사용된 원본 열의 이름을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataSet" />에 매핑된 원본 열의 이름입니다. 기본값은 빈 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceColumnNullMapping"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SourceVersion">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.Value" />를 로드할 때 사용할 <see cref="T:System.Data.DataRowVersion" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.DataRowVersion" /> 값 중 하나입니다. 기본값은 Current입니다.</returns>
      <exception cref="T:System.ArgumentException">속성이 <see cref="T:System.Data.DataRowVersion" /> 값 중 하나로 설정되지 않은 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.SqlDbType">
      <summary>매개 변수의 <see cref="T:System.Data.SqlDbType" />을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlDbType" /> 값 중 하나입니다. 기본값은 NVarChar입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.System#ICloneable#Clone"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameter.ToString">
      <summary>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" />이 들어 있는 문자열을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeParameter.ParameterName" />이 들어 있는 문자열을 반환합니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameter.Value">
      <summary>매개 변수의 값을 가져오거나 설정합니다.</summary>
      <returns>매개 변수의 값인 <see cref="T:System.Object" />입니다. 기본값은 null입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeParameterCollection">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />와 관련된 모든 매개 변수와 <see cref="T:System.Data.DataSet" /> 열에 대한 각 매핑을 수집합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Data.SqlServerCe.SqlCeParameter)">
      <summary>지정된 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체에 대한 참조입니다.</returns>
      <param name="value">컬렉션에 추가할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />에 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체를 추가합니다.</summary>
      <returns>컬렉션에 있는 새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 인덱스를 반환합니다.</returns>
      <param name="value">컬렉션에 추가할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체입니다. </param>
      <exception cref="T:System.InvalidCastException">전달된 매개 변수가 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />가 아닌 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>지정된 매개 변수 이름과 데이터 형식의 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체에 대한 참조입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="type">SqlDbType 값 중 하나입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>지정된 매개 변수 이름, 데이터 형식 및 열 너비의 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체에 대한 참조입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="type">SqlDbType 값 중 하나입니다. </param>
      <param name="size">열의 너비입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>지정된 매개 변수 이름, 데이터 형식, 열 너비, 원본 열 이름의 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체에 대한 참조입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="type">SqlDbType 값 중 하나입니다. </param>
      <param name="size">열의 너비입니다. </param>
      <param name="sourceColumn">원본 열의 이름입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Add(System.String,System.Object)">
      <summary>지정된 매개 변수 이름과 값의 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 추가합니다.</summary>
      <returns>새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체에 대한 참조입니다.</returns>
      <param name="parameterName">매개 변수의 이름입니다. </param>
      <param name="value">컬렉션에 추가할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 <see cref="T:System.Object" /> 값입니다. </param>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> 매개 변수로 제공된 개체를 문자열로 변환할 수 없는 경우. 개체가 기본 유형, SqlDbType 또는 바이트 배열이 아닌 경우 이러한 상황이 발생합니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddRange(System.Array)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체 배열을 추가합니다.</summary>
      <param name="values">컬렉션에 추가할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 형식의 값으로 구성된 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에 새 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 추가하고 해당 값을 설정합니다.</summary>
      <param name="parameterName">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 이름입니다.</param>
      <param name="value">
        <paramref name="parameterName" />의 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Clear">
      <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.Object)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션에 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">찾을 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 값입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Contains(System.String)">
      <summary>지정된 매개 변수 이름을 가진 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션에 매개 변수가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">매개 변수의 이름입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체를 <see cref="T:System.Data.SqlServerCe.SqlCeParameterCollection" />에서 지정된 배열로 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체를 복사해서 보낼 <see cref="T:System.Array" />입니다. </param>
      <param name="index">배열의 시작 인덱스입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Count">
      <summary>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.GetEnumerator"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.Object)">
      <summary>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체의 위치를 가져옵니다.</summary>
      <returns>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 위치(0부터 시작)를 반환합니다.</returns>
      <param name="value">찾을 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.IndexOf(System.String)">
      <summary>컬렉션에서 지정된 매개 변수 이름을 가진 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 위치를 가져옵니다.</summary>
      <returns>컬렉션에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />의 위치를 반환합니다.</returns>
      <param name="parameterName">찾을 매개 변수의 이름입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Insert(System.Int32,System.Object)">
      <summary>지정된 인덱스에 있는 컬렉션에 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 삽입합니다.</summary>
      <param name="index">매개 변수가 컬렉션 내에 삽입된 인덱스(0부터 시작)입니다. </param>
      <param name="value">컬렉션에 추가할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsFixedSize"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsReadOnly"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.IsSynchronized"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.Int32)">
      <summary>지정한 인덱스에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 가져오거나 설정합니다.</summary>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />입니다.</returns>
      <param name="index">검색할 매개 변수의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정한 인덱스가 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.Item(System.String)">
      <summary>지정된 이름을 가진 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 가져오거나 설정합니다.</summary>
      <returns>지정된 이름을 가진 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />입니다.</returns>
      <param name="parameterName">검색할 매개 변수의 이름입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정한 이름이 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.Remove(System.Object)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 제거합니다.</summary>
      <param name="value">컬렉션에서 제거할 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" /> 개체입니다. </param>
      <exception cref="T:System.SystemException">매개 변수가 없는 경우 </exception>
      <exception cref="T:System.InvalidCastException">매개 변수가 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />가 아닌 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.Int32)">
      <summary>컬렉션에서 지정된 인덱스의 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 제거합니다.</summary>
      <param name="index">제거할 매개 변수의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.IndexOutOfRangeException">지정한 인덱스가 없는 경우 </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeParameterCollection.RemoveAt(System.String)">
      <summary>컬렉션에서 지정된 이름을 가진 <see cref="T:System.Data.SqlServerCe.SqlCeParameter" />를 제거합니다.</summary>
      <param name="parameterName">제거할 매개 변수의 이름입니다. </param>
      <exception cref="T:System.ArgumentException">컬렉션에 지정된 이름의 매개 변수가 없는 경우 </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeParameterCollection.SyncRoot"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeProviderFactory">
      <summary>데이터 원본 클래스의 공급자 구현에 대한 인스턴스를 만드는 데 사용되는 메서드의 집합을 나타냅니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.#ctor">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommand">
      <summary>
        <see cref="T:System.Data.Common.DbCommand" />를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="System.Data.Common.DbCommand" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateCommandBuilder">
      <summary>
        <see cref="System.Data.Common.DbCommandBuilder" />를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="System.Data.Common.DbCommandBuilder" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnection">
      <summary>
        <see cref="System.Data.Common.DbConnection" />을 구현하는 공급자 클래스의 새 인스턴스를 반환합니다. </summary>
      <returns>
        <see cref="System.Data.Common.DbConnection" />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateConnectionStringBuilder">
      <summary>클래스를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns>클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateDataAdapter">
      <summary>
        <see cref="System.Data.Common.DbDataAdapter" />를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="System.Data.Common.DbDataAdapter." />의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.CreateParameter">
      <summary>
        <see cref="System.Data.Common.DbParameter" />를 구현하는 공급자 클래스의 새 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="System.Data.Common.DbParameter" />의 새 인스턴스입니다. </returns>
    </member>
    <member name="F:System.Data.SqlServerCe.SqlCeProviderFactory.Instance">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeProviderFactory" />의 인스턴스입니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeProviderFactory.System#IServiceProvider#GetService(System.Type)">
      <summary>서비스 유형을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Object" />를 반환합니다.</returns>
      <param name="serviceType">서비스 유형입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체의 새 인스턴스를 초기화합니다. RDA(Remote Data Access)에 대한 자세한 내용은 RDA(Remote Data Access) 사용을 참조하십시오.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체의 새 인스턴스를 초기화하고 Microsoft 인터넷 정보 서비스(IIS)에 대한 익명 액세스를 사용할 수 있도록 구성합니다.</summary>
      <param name="internetUrl">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL입니다. </param>
      <param name="localConnectionString">SQL Server Compact 데이터베이스에 대한 OLE DB 연결 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.#ctor(System.String,System.String,System.String,System.String)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체의 새 인스턴스를 초기화하고 Microsoft 인터넷 정보 서비스(IIS)에 대한 기본 또는 Windows 통합 인증을 사용할 수 있도록 구성합니다.</summary>
      <param name="internetUrl">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL입니다. </param>
      <param name="internetLogin">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 로그인 이름입니다. </param>
      <param name="internetPassword">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 암호입니다. </param>
      <param name="localConnectionString">SQL Server Compact 데이터베이스에 대한 OLE DB 연결 문자열입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.CompressionLevel">
      <summary>[보안 중요] Push 및 Pull 작업 동안 압축 루틴에서 사용할 압축 양을 지정합니다.</summary>
      <returns>설정된 압축 수준입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionManager">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체가 스마트 장치의 연결 관리자 API를 사용하여 네트워크 연결을 설정할 수 있도록 합니다. 동기화가 끝나면 연결이 해제됩니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout">
      <summary>[보안 중요] SQL Server Compact 클라이언트가 실패한 요청을 계속해서 다시 보내려고 시도할 시간(초)을 지정합니다.</summary>
      <returns>기본값이 120초인 <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectionRetryTimeout" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ConnectTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체가 서버에 대한 연결을 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 없는 <see cref="T:System.Int32" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Dispose">
      <summary>[보안 중요] 관리되지 않는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetLogin">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 Microsoft 인터넷 정보 서비스(IIS) 로그인 이름을 지정합니다.</summary>
      <returns>SQL Server Compact 서버 에이전트에 연결할 때 사용되는 IIS 로그인 이름입니다. 기본적으로 로그인은 사용하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetPassword">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 Microsoft 인터넷 정보 서비스(IIS) 암호를 지정합니다.</summary>
      <returns>SQL Server Compact 서버 에이전트에 연결할 때 사용되는 IIS 암호 문자열입니다. 기본적으로 암호는 사용되지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyLogin">
      <summary>[보안 중요] 인증이 필요한 프록시 서버(<see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> 속성에서 정의됨)에 연결할 때 사용되는 로그인 이름을 지정합니다.</summary>
      <returns>프록시 서버 로그인 이름입니다. 기본적으로 로그인은 사용하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyPassword">
      <summary>[보안 중요] 인증이 필요한 프록시 서버(<see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer" /> 속성에서 정의됨)에 연결할 때 사용되는 암호를 지정합니다.</summary>
      <returns>프록시 서버 암호 문자열입니다. 기본적으로 암호는 사용되지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetProxyServer">
      <summary>[보안 중요] <see cref="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl" /> 속성에서 지정된 HTTP 리소스에 액세스할 때 사용할 수 있도록 프록시 서버를 지정합니다.</summary>
      <returns>지정된 HTTP 리소스에 액세스할 때 사용되는 프록시 서버 이름(또는 IP 주소)과 포트 번호(<paramref name="ProxyServerName:Port" />)입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.InternetUrl">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL을 지정합니다. SQL Server Compact 서버 에이전트는 SQL Server Compact 클라이언트를 Microsoft SQL Server 데이터베이스에 연결하는 Microsoft 인터넷 정보 서비스(IIS) ISAPI DLL입니다. 이 속성을 지정해야 합니다.</summary>
      <returns>파일 이름 Sqlcesa35.dll을 포함하여 SQL Server Compact 서버 에이전트의 URL이 포함된 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.LocalConnectionString">
      <summary>[보안 중요] SQL Server Compact 데이터베이스에 대한 연결 문자열을 지정합니다.</summary>
      <returns>SQL Server Compact 데이터베이스에 대한 연결 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String)">
      <summary>[보안 중요] 원격 SQL Server 데이터베이스에서 데이터를 다운로드하고 로컬 SQL Server Compact 데이터베이스의 단일 테이블에 해당 데이터를 저장합니다.</summary>
      <param name="localTableName">추출된 SQL Server 레코드를 받을 SQL Server Compact 테이블의 이름입니다. 테이블이 이미 존재하는 경우에는 오류가 발생합니다. </param>
      <param name="sqlSelectString">SELECT 문과 저장 프로시저를 포함하는 모든 유효한 Transact-SQL 문으로, SQL Server Compact 데이터베이스에 저장하기 위해 SQL Server 데이터베이스에서 추출할 테이블, 열 및 레코드를 여기에 지정합니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption)">
      <summary>[보안 중요] 원격 SQL Server 데이터베이스에서 데이터를 다운로드하고 로컬 SQL Server Compact 데이터베이스의 단일 테이블에 해당 데이터를 저장합니다.</summary>
      <param name="localTableName">추출된 SQL Server 레코드를 받을 SQL Server Compact 테이블의 이름입니다. 테이블이 이미 존재하는 경우에는 오류가 발생합니다. </param>
      <param name="sqlSelectString">SELECT 문과 저장 프로시저를 포함하는 모든 유효한 Transact-SQL 문으로, SQL Server Compact 데이터베이스에 저장하기 위해 SQL Server 데이터베이스에서 추출할 테이블, 열 및 레코드를 여기에 지정합니다. </param>
      <param name="trackOption">가져온 테이블에 대한 변경 사항을 SQL Server Compact에서 추적하는지 여부와 가져온 테이블에 있는 인덱스가 기본 키 제약 조건을 사용하여 장치로 전달되는지 여부를 나타내는 옵션입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Pull(System.String,System.String,System.String,System.Data.SqlServerCe.RdaTrackOption,System.String)">
      <summary>[보안 중요] 원격 SQL Server 데이터베이스에서 데이터를 다운로드하고 로컬 SQL Server Compact 데이터베이스의 단일 테이블에 해당 데이터를 저장합니다.</summary>
      <param name="localTableName">추출된 SQL Server 레코드를 받을 SQL Server Compact 테이블의 이름입니다. 테이블이 이미 존재하는 경우에는 오류가 발생합니다. </param>
      <param name="sqlSelectString">SELECT 문과 저장 프로시저를 포함하는 모든 유효한 Transact-SQL 문으로, SQL Server Compact 데이터베이스에 저장하기 위해 SQL Server 데이터베이스에서 추출할 테이블, 열 및 레코드를 여기에 지정합니다. </param>
      <param name="trackOption">가져온 테이블에 대한 변경 사항을 SQL Server Compact에서 추적하는지 여부와 가져온 테이블에 있는 인덱스가 기본 키 제약 조건을 사용하여 장치로 전달되는지 여부를 나타내는 옵션입니다. </param>
      <param name="errorTable">나중에 <see cref="Overload:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push" /> 메서드를 호출하여 변경 내용을 다시 SQL Server로 보낼 때 오류가 발생하는 경우 생성되는 로컬 오류 테이블의 이름입니다. 이 옵션은 <paramref name="RdaTrackOption" /> 값이 <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOn" /> 또는 <see cref="F:System.Data.SqlServerCe.RdaTrackOption.TrackingOnWithIndexes" />일 경우에만 지정할 수 있습니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String)">
      <summary>[보안 중요] 추적되는 가져온 SQL Server Compact 테이블의 변경 사항을 원래 SQL Server 테이블로 전송합니다. 이러한 변경 사항은 개별 트랜잭션에서 서버에 각각 적용됩니다.</summary>
      <param name="localTableName">추출된 SQL Server 레코드를 받을 SQL Server Compact 테이블의 이름입니다. 테이블이 이미 존재하는 경우에는 오류가 발생합니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.Push(System.String,System.String,System.Data.SqlServerCe.RdaBatchOption)">
      <summary>[보안 중요] 추적되는 가져온 SQL Server Compact 테이블의 변경 사항을 SQL Server 테이블로 전송합니다. 이러한 변경 사항은 서버에 개별적으로 적용되거나 단일 트랜잭션에서 일괄적으로 처리될 수 있습니다.</summary>
      <param name="localTableName">추출된 SQL Server 레코드를 받을 SQL Server Compact 테이블의 이름입니다. 테이블이 이미 존재하는 경우에는 오류가 발생합니다. </param>
      <param name="batchOption">SQL Server 테이블로 전송되는 변경 사항이 단일 트랜잭션에서 일괄적으로 처리되는지, 아니면 개별적으로 적용되는지 여부를 나타내는 옵션입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.ReceiveTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체가 서버 요청에 대한 응답을 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 60초인 <see cref="T:System:Int32" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SendTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeRemoteDataAccess" /> 개체가 서버에 요청을 보내기 위해 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 없는 <see cref="T:System.Int32" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRemoteDataAccess.SubmitSql(System.String,System.String)">
      <summary>[보안 중요] 원격 서버의 SQL Server 데이터베이스에서 실행할 SQL 문을 전송합니다.</summary>
      <param name="sqlString">행을 반환하지 않는 SQL 문입니다. </param>
      <param name="oleDBConnectionString">원격 SQL Server 데이터베이스에 대한 OLE DB 연결 문자열입니다. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeReplication">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 새 인스턴스를 초기화합니다. SQL Server 복제에 대한 자세한 내용은 SQL Server 온라인 설명서를 참조하십시오. SQL Server Compact을 사용한 병합 복제에 대한 자세한 내용은 SQL Server Compact 온라인 설명서를 참조하십시오.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 새 인스턴스를 초기화합니다. 이것이 기본 생성자입니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 새 인스턴스를 초기화하고 게시에 연결하는 데 필요한 속성을 설정합니다.</summary>
      <param name="internetUrl">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL입니다. </param>
      <param name="internetLogin">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 로그인 이름입니다. </param>
      <param name="internetPassword">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 암호입니다. </param>
      <param name="publisher">게시자의 이름입니다. </param>
      <param name="publisherDatabase">게시 데이터베이스의 이름입니다. </param>
      <param name="publication">익명 병합 구독에서 사용 가능한 게시 이름입니다. </param>
      <param name="subscriber">구독자의 이름입니다. </param>
      <param name="subscriberConnectionString">Windows Mobile 기반 장치의 SQL Server Compact 데이터베이스에 대한 OLE DB 연결 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체의 새 인스턴스를 초기화하고 게시에 연결하는 데 필요한 속성을 설정합니다.</summary>
      <param name="internetUrl">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL입니다. </param>
      <param name="internetLogin">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 로그인 이름입니다. </param>
      <param name="internetPassword">SQL Server Compact 서버 에이전트에 연결할 때 사용되는 암호입니다. </param>
      <param name="publisher">게시자의 이름입니다. </param>
      <param name="publisherDatabase">게시 데이터베이스의 이름입니다. </param>
      <param name="publisherLogin">게시자에 연결할 때 사용되는 로그인 이름입니다. </param>
      <param name="publisherPassword">게시자에 연결할 때 사용되는 로그인 암호입니다. </param>
      <param name="publication">익명 병합 구독에서 사용 가능한 게시 이름입니다. </param>
      <param name="subscriber">구독자의 이름입니다. </param>
      <param name="subscriberConnectionString">Windows Mobile 기반 장치의 SQL Server Compact 데이터베이스에 대한 OLE DB 연결 문자열입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)">
      <summary>[보안 중요] 기존 SQL Server 게시에 대한 새 익명 구독을 만듭니다. <see cref="M:System.Data.SqlServerCe.SqlCeReplication.AddSubscription(System.Data.SqlServerCe.AddOption)" /> 메서드를 호출한 후 응용 프로그램은 <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> 메서드를 호출하여 최신 스냅숏에 따라 게시에 대한 새 구독을 동기화해야 합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Data.SqlServerCe.OnStartTableUpload,System.Data.SqlServerCe.OnStartTableDownload,System.Data.SqlServerCe.OnSynchronization,System.Object)">
      <summary>[보안 중요] 비동기 데이터 동기화 작업을 시작합니다. 동기화가 끝나면 <see cref="T:System.AsyncCallback" /> 대리자가 호출됩니다. 동기화하는 동안 동기화 상태 보고서가 SyncStatusReport 대리자에게 전송됩니다.</summary>
      <returns>이 함수를 호출하여 시작된 비동기 작업에 대한 <see cref="T:System.IAsyncResult" /> 인터페이스입니다. 이 인터페이스는 완료 테스트에 사용하거나 동기화가 종료될 때까지 기다리는 데 사용할 수 있습니다.</returns>
      <param name="onSyncCompletion">호출자에 의해 구현되고 동기화가 끝날 때 호출되는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</param>
      <param name="onStartTableUpload">서버에 테이블의 변경 내용을 업로드하기 시작할 때 발생하는 이벤트에 대한 사용자 정의 대리자입니다.</param>
      <param name="onStartTableDownload">서버에서 테이블의 변경 내용을 다운로드하기 시작할 때 발생하는 이벤트에 대한 사용자 정의 대리자입니다.</param>
      <param name="onSynchronization">조정자가 작업하는 동안 보고되는 진행 중인 동기화 이벤트를 소비하는 사용자 정의 대리자입니다.</param>
      <param name="state">
        <see cref="P:System.IAsyncResult.AsyncState" /> 속성이 반환하는 사용자 정의 개체입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize(System.AsyncCallback,System.Object)">
      <summary>[보안 중요] 비동기 데이터 동기화 작업을 시작합니다. 동기화가 끝나면 <see cref="T:System.AsyncCallback" /> 대리자가 호출됩니다. 동기화 중에는 상태가 보고되지 않습니다.</summary>
      <returns>이 함수를 호출하여 시작된 비동기 작업에 대한 <see cref="T:System.IAsyncResult" /> 인터페이스입니다. 이 인터페이스는 완료 테스트에 사용하거나 동기화가 종료될 때까지 기다리는 데 사용할 수 있습니다.</returns>
      <param name="onSyncCompletion">호출자에 의해 구현되고 동기화가 끝날 때 호출되는 <see cref="T:System.IAsyncResult" /> 대리자입니다.</param>
      <param name="state">
        <see cref="P:System.IAsyncResult.AsyncState" /> 속성이 반환하는 사용자 정의 개체입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.CancelSynchronize">
      <summary>[보안 중요] <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> 메서드를 호출하여 시작된 비동기 데이터 동기화의 진행을 취소합니다. </summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.CompressionLevel">
      <summary>[보안 중요] 복제하는 동안 압축 루틴에서 사용할 압축 양을 지정합니다.</summary>
      <returns>압축 수준입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionManager">
      <summary>[보안 중요] 복제 개체가 스마트 장치의 연결 관리자 API를 사용하여 네트워크 연결을 설정할 수 있도록 합니다. 동기화가 끝나면 연결이 해제됩니다.</summary>
      <returns>연결 관리자 설정이 사용되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout">
      <summary>[보안 중요] 연결 설정이 실패한 후 SQL Server Compact 클라이언트가 계속해서 요청을 다시 보내는 시간(초)을 지정합니다.</summary>
      <returns>기본값이 120초인 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ConnectionRetryTimeout" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ConnectTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체가 서버에 대한 연결을 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 없는 <see cref="T:System:Int32" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Dispose">
      <summary>[보안 중요] 모든 네이티브 리소스를 해제합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Distributor">
      <summary>[보안 중요] SQL Server 배포자를 지정합니다.</summary>
      <returns>게시자가 사용하는 배포자의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorAddress">
      <summary>[보안 중요] SQL Server Reconciler가 배포자에 연결될 때 사용되는 네트워크 주소를 지정합니다.</summary>
      <returns>배포자에 연결할 때 사용되는 네트워크 주소입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorLogin">
      <summary>[보안 중요] 배포자에 연결할 때 사용되는 로그인 이름을 지정합니다.</summary>
      <returns>배포자에 연결할 때 사용되는 로그인 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorNetwork">
      <summary>[보안 중요] SQL Server Reconciler와 배포자가 통신할 때 사용되는 네트워크 프로토콜을 지정합니다.</summary>
      <returns>배포자와 통신하기 위해 SQL Server Reconciler에서 사용하는 <see cref="T:System.Data.SqlServerCe.NetworkType" /> 상수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorPassword">
      <summary>[보안 중요] 배포자에 연결할 때 사용되는 로그인 암호를 지정합니다.</summary>
      <returns>배포자에 연결할 때 사용되는 암호입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.DistributorSecurityMode">
      <summary>[보안 중요] 배포자에 연결할 때 사용되는 보안 모드를 지정합니다.</summary>
      <returns>배포자에 적용되는 보안 모드를 지정하는 <see cref="T:System.Data.SqlServerCe.SecurityType" /> 상수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.DropSubscription(System.Data.SqlServerCe.DropOption)">
      <summary>[보안 중요] SQL Server 게시에 대한 구독을 삭제하고 Windows Mobile 기반 장치에서 SQL Server Compact 데이터베이스를 선택적으로 삭제합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.EndSynchronize(System.IAsyncResult)">
      <summary>[보안 중요] <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> 메서드를 호출하여 시작된 비동기 데이터 동기화를 종료합니다. </summary>
      <param name="ar">
        <see cref="Overload:System.Data.SqlServerCe.SqlCeReplication.BeginSynchronize" /> 메서드가 반환한 <see cref="T:System.IAsyncResult" /> 인터페이스입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType">
      <summary>[보안 중요] 게시자와 구독자 간의 동기화가 양방향인지, 아니면 업로드만인지 여부를 지정합니다.</summary>
      <returns>데이터가 게시자로만 병합되는지 또는 게시자와 구독자 간에 양방향으로 병합되는지를 지정하는 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.ExchangeType" /> 상수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.HostName">
      <summary>[보안 중요] 게시자에 연결할 때 장치에서 사용되는 호스트 이름을 가져오거나 설정합니다.</summary>
      <returns>장치의 호스트 이름입니다. 기본적으로 호스트 이름은 사용하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetLogin">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 로그인 이름을 지정합니다.</summary>
      <returns>IIS(인터넷 정보 서비스) 로그인 이름입니다. 기본적으로 로그인 이름은 사용하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetPassword">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 암호를 지정합니다.</summary>
      <returns>IIS(인터넷 정보 서비스) 암호 문자열입니다. 기본적으로 암호는 사용되지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyLogin">
      <summary>[보안 중요] 인증이 필요한 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" />에 연결할 때 사용되는 로그인 이름을 지정합니다.</summary>
      <returns>프록시 서버 로그인 이름입니다. 기본적으로 로그인 이름은 사용하지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyPassword">
      <summary>[보안 중요] 인증이 필요한 <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer" />에 연결할 때 사용되는 암호를 지정합니다.</summary>
      <returns>프록시 서버 암호 문자열입니다. 기본적으로 암호는 사용되지 않습니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetProxyServer">
      <summary>[보안 중요] <see cref="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl" /> 속성에서 지정된 HTTP 리소스에 액세스할 때 사용할 수 있도록 프록시 서버를 지정합니다.</summary>
      <returns>다음 형식으로 표시되는 프록시 서버 이름(또는 IP 주소)과 선택적 포트 번호입니다. <paramref name="ProxyServerName" />:<paramref name="Port" /></returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.InternetUrl">
      <summary>[보안 중요] SQL Server Compact 서버 에이전트에 연결할 때 사용되는 URL을 지정합니다.</summary>
      <returns>URL 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.LoadProperties">
      <summary>[보안 중요] 동기화 속성에 대해 저장된 모든 값을 검색한 다음 <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 클래스 속성을 이러한 저장된 값으로 채웁니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.LoginTimeout">
      <summary>[보안 중요] 연결하는 동안 대기하는 최대 시간(초)을 지정합니다. 이 속성은 IIS(인터넷 정보 서비스)를 실행하는 컴퓨터와 게시자 또는 배포자 사이의 연결에 영향을 줍니다. 스마트 장치와 IIS 사이의 연결 시간은 제어하지 않습니다.</summary>
      <returns>연결에 필요한 시간(초)입니다. 기본값은 15초입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PostSyncCleanup">
      <summary>[보안 중요] 수행된 동기화 후 정리 작업의 유형을 선택적으로 사용하거나 사용하지 않도록 설정하는 값을 가져오거나 설정합니다.</summary>
      <returns>수행할 동기화 후 정리 작업을 지정하는 값입니다. 통계 업데이트 작업(UpdateStats)과 보존에 위한 정리(CleanByRetention) 작업은 선택적으로 사용하거나 사용하지 않도록 설정할 수 있습니다. 자세한 내용은 주의 섹션을 참조하십시오.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ProfileName">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체가 사용할 에이전트 프로필의 이름을 배포자에서 지정합니다.</summary>
      <returns>에이전트 프로필의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publication">
      <summary>[보안 중요] SQL Server Compact 구독자가 사용할 수 있는 SQL Server 게시 이름을 지정합니다.</summary>
      <returns>게시 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Publisher">
      <summary>[보안 중요] SQL Server 게시자의 이름을 지정합니다. 게시자는 SQL Server를 실행하고 게시를 포함하는 컴퓨터입니다.</summary>
      <returns>게시자의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherAddress">
      <summary>[보안 중요] 게시자에 연결할 때 사용되는 네트워크 주소를 지정합니다.</summary>
      <returns>게시자에 연결할 때 사용되는 네트워크 주소입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherChanges">
      <summary>[보안 중요] <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> 메서드를 마지막으로 호출했을 때 구독자에 적용되는 게시자 변경 사항의 총 개수를 지정합니다.</summary>
      <returns>삽입되고, 업데이트되고, 삭제된 전체 게시자 행 수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherConflicts">
      <summary>[보안 중요] <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> 메서드를 마지막으로 호출했을 때 게시자에서 발생한 충돌의 총 개수를 지정합니다.</summary>
      <returns>발생한 충돌 수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherDatabase">
      <summary>[보안 중요] 게시 데이터베이스의 이름을 지정합니다.</summary>
      <returns>게시 데이터베이스의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherLogin">
      <summary>[보안 중요] 게시자에 연결할 때 사용되는 로그인 이름을 지정합니다.</summary>
      <returns>게시자 로그인 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherNetwork">
      <summary>[보안 중요] SQL Server Replication Provider와 게시자가 통신할 때 사용되는 네트워크 프로토콜을 지정합니다.</summary>
      <returns>사용된 네트워크 프로토콜을 지정하는 <see cref="T:System.Data.SqlServerCe.NetworkType" /> 상수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherPassword">
      <summary>[보안 중요] 게시자에 연결할 때 사용되는 로그인 암호를 지정합니다.</summary>
      <returns>로그인 암호입니다. 기본값은 암호 없음(빈 문자열)입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.PublisherSecurityMode">
      <summary>[보안 중요] 게시자에 연결할 때 사용되는 보안 모드를 지정합니다.</summary>
      <returns>보안 모드를 지정하는 <see cref="T:System.Data.SqlServerCe.SecurityType" /> 상수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.QueryTimeout">
      <summary>[보안 중요] 내부 쿼리를 완료하는 데 허용되는 시간(초)을 지정합니다.</summary>
      <returns>내부 쿼리를 반환하는 데 허용되는 시간(초)입니다. 기본값은 300초입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.ReceiveTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체가 서버 요청에 대한 응답을 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 60초인 <see cref="T:System:Int32" /> 값입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.ReinitializeSubscription(System.Boolean)">
      <summary>[보안 중요] 다시 초기화할 구독을 표시합니다. 이 메서드를 호출한 후 응용 프로그램에서는 <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> 메서드를 호출하여 게시의 최신 스냅숏을 장치로 다운로드해야 합니다.</summary>
      <param name="uploadBeforeReinitialize">이 값이 True인 경우 스냅숏이 구독자에 적용되기 전에 구독 데이터베이스의 변경 내용이 게시자에 업로드됩니다. 기본값은 False입니다. </param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.SaveProperties">
      <summary>[보안 중요] 현재 구독에 대해 <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 클래스 속성에 저장된 모든 값을 검색하여 시스템 테이블에 저장합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SendTimeout">
      <summary>[보안 중요] <see cref="T:System.Data.SqlServerCe.SqlCeReplication" /> 개체가 서버에 요청을 보내기 위해 기다리는 시간(밀리초)을 가져오거나 설정합니다.</summary>
      <returns>제한 시간(밀리초)을 나타내고 기본값이 없는 <see cref="T:System.Int32" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType">
      <summary>[보안 중요] 스냅숏 파일이 배포자에서 IIS를 실행하는 컴퓨터로 전송되는 방법을 제어합니다. 스냅숏 파일은 HTTP 또는 FTP 프로토콜을 사용하여 전송될 수 있습니다.</summary>
      <returns>
        <see cref="P:System.Data.SqlServerCe.SqlCeReplication.SnapshotTransferType" /> 값입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Subscriber">
      <summary>[보안 중요] 구독자의 이름을 지정합니다.</summary>
      <returns>구독자의 이름입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberChanges">
      <summary>[보안 중요] <see cref="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize" /> 메서드를 마지막으로 호출했을 때 게시자에 적용된 구독자 변경 사항의 총 개수를 지정합니다.</summary>
      <returns>삽입되고, 업데이트되고, 삭제된 전체 구독자 행 수입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConflicts">
      <summary>[보안 중요] 이 속성은 SQL Server Compact에서 사용되지 않습니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.SubscriberConnectionString">
      <summary>[보안 중요] SQL Server Compact 데이터베이스에 대한 연결 문자열을 지정합니다.</summary>
      <returns>SQL Server Compact 데이터베이스에 대한 연결 문자열입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeReplication.Synchronize">
      <summary>[보안 중요] SQL Server Compact 구독과 SQL Server 게시자 간의 병합 복제를 호출합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeReplication.Validate">
      <summary>[보안 중요] 동기화하는 동안 SQL Server Compact 복제가 수행하는 데이터 유효성 검사의 형식을 지정합니다.</summary>
      <returns>수행할 데이터 유효성 검사의 형식을 지정하는 <see cref="T:System.Data.SqlServerCe.ValidateType" /> 상수입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeResultSet">
      <summary>업데이트, 스크롤 및 바인딩이 가능한 커서입니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.#ctor">
      <summary>[보안 중요] 사용하지 마십시오. <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />을 만들려면 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />의 <see cref="M:System.Data.Sql.ISqlExecutionContext.ExecuteResultSet(System.Data.ResultSetOptions)" /> 메서드를 호출해야 합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.CreateRecord">
      <summary>서버에서 새 행을 만들고 <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 메타데이터가 미리 채워진 SqlCeUpdatableRecord입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Delete">
      <summary>서버에 있는 데이터 원본에서 현재 레코드를 삭제합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBoolean(System.Int32)">
      <summary>지정된 인덱스의 열 값을 boolean 값으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetByte(System.Int32)">
      <summary>지정된 인덱스의 열 값을 byte로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 필드의 지정된 위치에서 시작하여 바이트 단위의 길이를 버퍼에 복사합니다. </summary>
      <returns>버퍼에 복사된 실제 바이트 수입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.  </param>
      <param name="dataIndex">데이터 복사를 시작할 원본 필드 내의 오프셋(바이트 단위)입니다.</param>
      <param name="buffer">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferIndex">복사를 시작할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 필드의 지정된 위치에서 시작하여 문자 단위의 길이를 버퍼에 복사합니다. </summary>
      <returns>복사된 실제 문자 수입니다.</returns>
      <param name="ordinal">데이터를 검색할 필드의 위치입니다.</param>
      <param name="dataIndex">복사를 시작할 원본 필드 내의 오프셋(문자 단위)입니다.</param>
      <param name="buffer">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferIndex">복사를 시작할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDateTime(System.Int32)">
      <summary>지정된 인덱스의 열 값을 DateTime으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDecimal(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Double로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetDouble(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Double로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetEnumerator">
      <summary>데이터 판독기에서 행을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetFloat(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Float로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetGuid(System.Int32)">
      <summary>지정된 인덱스의 열 값을 GUID로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt16(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Int16으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt32(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Int32로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">TBD</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetInt64(System.Int32)">
      <summary>지정된 인덱스의 열 값을 Int64로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetList">
      <summary>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" />의 인스턴스를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBinary(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlBinary 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlBoolean(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlBoolean 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlByte(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlByte 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDateTime(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlDateTime 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDecimal(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlDecimal 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlDouble(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlDouble 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlGuid(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlGuid 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt16(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlInt16 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt32(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlInt32 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlInt64(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlInt64 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMetaData(System.Int32)">
      <summary>지정된 열과 관련된 메타데이터 정보를 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 메타데이터입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlMoney(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlMoney 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlSingle(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlSingle 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetSqlString(System.Int32)">
      <summary>지정된 인덱스의 열 값을 SqlString 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetString(System.Int32)">
      <summary>지정된 인덱스의 열 값을 String 형식으로 반환합니다.</summary>
      <returns>지정한 인덱스에 있는 열의 값입니다.</returns>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValue(System.Int32)">
      <summary>지정된 필드의 값을 반환합니다.</summary>
      <returns>지정된 필드의 값을 포함하는 개체입니다.</returns>
      <param name="ordinal">값을 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.GetValues(System.Object[])">
      <summary>지정된 레코드의 모든 필드로 이루어진 배열을 검색합니다.</summary>
      <returns>배열의 인스턴스 수입니다.</returns>
      <param name="values">반환되는 값을 저장할 Object 형식의 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord)">
      <summary>지정된 <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" />를 내부 행 집합에 삽입합니다.</summary>
      <param name="record">삽입할 레코드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Insert(System.Data.SqlServerCe.SqlCeUpdatableRecord,System.Data.SqlServerCe.DbInsertOptions)">
      <summary>지정한 <see cref="T:System.Data.SqlServerCe.SqlCeUpdatableRecord" />를 내부 행 집합에 삽입하고 커서가 배치되는 방식을 지정합니다.</summary>
      <param name="record">삽입할 레코드입니다.</param>
      <param name="options">삽입 후 커서가 배치되는 방식을 지정하는 <see cref="T:System.Data.SqlServerCe.DbInsertOptions" /> 옵션입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsDBNull(System.Int32)">
      <summary>지정된 서수 위치의 필드가 null인지 여부를 확인합니다.</summary>
      <returns>지정된 필드가 null이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">값을 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.IsSetAsDefault(System.Int32)">
      <summary>지정된 서수 위치의 필드가 내부 기본값을 사용하도록 표시되었는지 여부를 확인합니다.</summary>
      <returns>지정된 필드가 내부 기본값을 사용하도록 표시되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">값을 검색할 열의 서수 위치입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.Int32)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 인덱서 역할을 합니다.</summary>
      <returns>지정한 인덱스의 레코드입니다.</returns>
      <param name="index">ResultSet에서 항목의 위치입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Item(System.String)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 인덱서 역할을 합니다.</summary>
      <returns>지정된 이름과 일치하는 레코드입니다.</returns>
      <param name="name">ResultSet에 있는 레코드의 이름입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.OnMove"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadAbsolute(System.Int32)">
      <summary>판독기를 ResultSet의 특정 레코드로 이동합니다.</summary>
      <returns>작업이 성공하면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="position">판독기를 이동할 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadFirst">
      <summary>판독기를 ResultSet의 첫 번째 레코드에 배치합니다.</summary>
      <returns>작업이 성공하면 true이고 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadLast">
      <summary>판독기를 ResultSet의 마지막 레코드에 배치합니다.</summary>
      <returns>작업이 성공하면 true이고 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadPrevious">
      <summary>현재 레코드 이전의 레코드에 판독기를 배치합니다.</summary>
      <returns>작업이 성공하면 true이고 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.ReadRelative(System.Int32)">
      <summary>현재 위치에서 지정된 위치만큼 판독기를 이동합니다.</summary>
      <returns>작업이 성공하면 true이고 그렇지 않으면 false입니다.</returns>
      <param name="position">판독기를 이동할 위치 수입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.ResultSetView">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />를 컨트롤에 데이터 바인딩할 때 사용됩니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.ResultSetView" />입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Scrollable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />을 스크롤할 수 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />을 스크롤할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Sensitivity">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 민감도를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />에 대한 <see cref="T:System.Data.SqlServerCe.ResultSetSensitivity" />입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBoolean(System.Int32,System.Boolean)">
      <summary>지정된 열 값을 전달된 Boolean 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetByte(System.Int32,System.Byte)">
      <summary>지정된 열 값을 전달된 Byte 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 버퍼에서 바이트 단위의 길이를 필드 내의 지정된 위치에서 시작하여 지정된 열에 복사합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="dataIndex">데이터를 복사해 넣을 열 내의 위치입니다.</param>
      <param name="buffer">복사할 데이터가 들어 있는 버퍼입니다.</param>
      <param name="bufferIndex">데이터를 복사할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChar(System.Int32,System.Char)">
      <summary>지정된 열 값을 전달된 Char 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="c">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 버퍼에서 char 단위의 길이를 필드 내의 지정된 위치에서 시작하여 지정된 열에 복사합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="dataIndex">데이터를 복사해 넣을 열 내의 위치입니다.</param>
      <param name="buffer">복사할 데이터가 들어 있는 버퍼입니다.</param>
      <param name="bufferIndex">데이터를 복사할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDateTime(System.Int32,System.DateTime)">
      <summary>지정된 열 값을 전달된 DateTime 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDecimal(System.Int32,System.Decimal)">
      <summary>지정된 열 값을 전달된 Decimal 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDefault(System.Int32)">
      <summary>지정된 열을 기본값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetDouble(System.Int32,System.Double)">
      <summary>지정된 열 값을 전달된 Double 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetFloat(System.Int32,System.Single)">
      <summary>지정된 열 값을 전달된 Float 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetGuid(System.Int32,System.Guid)">
      <summary>지정된 열 값을 전달된 Guid 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt16(System.Int32,System.Int16)">
      <summary>지정된 열 값을 전달된 Int16 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt32(System.Int32,System.Int32)">
      <summary>지정된 열 값을 전달된 Int32 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetInt64(System.Int32,System.Int64)">
      <summary>지정된 열 값을 전달된 Int64 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetObjectRef(System.Int32,System.Object)">
      <summary>개체를 지정된 위치의 열에 바인딩합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="buffer">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>지정된 열 값을 전달된 SqlBinary 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>지정된 열 값을 전달된 SqlBoolean 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>지정된 열 값을 전달된 SqlByte 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>지정된 열 값을 전달된 SqlDateTime 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>지정된 열 값을 전달된 SqlDecimal 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>지정된 열 값을 전달된 SqlDouble 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>지정된 열 값을 전달된 SqlGuid 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>지정된 열 값을 전달된 SqlInt16 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 열 값을 전달된 SqlInt32 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>지정된 열 값을 전달된 SqlInt64 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>지정된 열 값을 전달된 SqlMoney 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 열 값을 전달된 SqlSingle 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>지정된 열 값을 전달된 SqlString 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetString(System.Int32,System.String)">
      <summary>지정된 열 값을 전달된 String 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValue(System.Int32,System.Object)">
      <summary>지정된 열 값을 전달된 값으로 설정합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="value">지정한 열에 할당할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.SetValues(System.Object[])">
      <summary>지정된 레코드의 각 필드를 지정된 배열의 해당 값으로 설정합니다.</summary>
      <returns>배열에서 복사된 값의 개수입니다.</returns>
      <param name="values">설정할 값이 들어 있는 배열입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#ContainsListCollection"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.System#ComponentModel#IListSource#GetList"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeResultSet.Updatable">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" />의 값을 수정할 수 있는지 여부를 확인합니다.</summary>
      <returns>레코드의 값을 수정할 수 있으면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeResultSet.Update">
      <summary>현재 레코드의 변경 사항을 서버의 내부 행으로 보냅니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> 이벤트에 대한 데이터를 제공합니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />로 보내는 <see cref="T:System.Data.DataRow" />입니다. </param>
      <param name="command">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />가 호출될 때 실행되는 <see cref="T:System.Data.IDbCommand" />입니다. </param>
      <param name="statementType">실행되는 쿼리 형식을 지정하는 <see cref="T:System.Data.StatementType" /> 값 중 하나입니다. </param>
      <param name="tableMapping">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />로 보내는 <see cref="T:System.Data.Common.DataTableMapping" />입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs.Command">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />가 호출될 때 실행되는 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />를 가져옵니다.</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />가 호출될 때 실행되는 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdated" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 원본입니다. </param>
      <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatedEventArgs" />입니다. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs">
      <summary>
        <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="dataRow">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />할 <see cref="T:System.Data.DataRow" />입니다. </param>
      <param name="command">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 동안 실행할 <see cref="T:System.Data.IDbCommand" />입니다. </param>
      <param name="statementType">실행되는 쿼리 형식을 지정하는 <see cref="T:System.Data.StatementType" /> 값 중 하나입니다. </param>
      <param name="tableMapping">
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />로 보내는 <see cref="T:System.Data.Common.DataTableMapping" />입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs.Command">
      <summary>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />을 수행하는 동안 실행할 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />를 수행할 때 실행할 <see cref="T:System.Data.SqlServerCe.SqlCeCommand" />입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventHandler">
      <summary>
        <see cref="T:System.Data.SqlServerCe.SqlCeDataAdapter" />의 <see cref="E:System.Data.SqlServerCe.SqlCeDataAdapter.RowUpdating" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 원본입니다. </param>
      <param name="e">이벤트 데이터가 들어 있는 <see cref="T:System.Data.SqlServerCe.SqlCeRowUpdatingEventArgs" />입니다. </param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransaction">
      <summary>데이터 원본에서 만들어지는 SQL 트랜잭션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit">
      <summary>데이터베이스 트랜잭션을 커밋합니다.</summary>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생했습니다. </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백되었습니다.-또는- 연결이 끊어졌습니다. </exception>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Commit(System.Data.SqlServerCe.CommitMode)">
      <summary>지정된 <see cref="T:System.Data.SqlServerCe.CommitMode" />를 사용하여 데이터베이스 트랜잭션을 커밋합니다.</summary>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생했습니다. </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백되었습니다.-또는- 연결이 끊어졌습니다. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.CurrentTransactionBsn">
      <summary>트랜잭션의 BSN(시작 시퀀스 번호)을 가져옵니다.</summary>
      <returns>트랜잭션에 대한 BSN입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Dispose">
      <summary>트랜잭션과 관련된 <see cref="T:System.Data.SqlServerCe.SqlCeConnection" /> 개체를 모두 해제합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.IsolationLevel">
      <summary>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />을 지정합니다.</summary>
      <returns>이 트랜잭션에 대한 <see cref="T:System.Data.IsolationLevel" />입니다. SQL Server Compact용 .NET Compact Framework 데이터 공급자에서는 ReadCommitted, Serializable 및 ReadRepeatable 격리 수준을 지원합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransaction.Rollback">
      <summary>보류 중인 상태에서 트랜잭션을 롤백합니다.</summary>
      <exception cref="T:System.Exception">트랜잭션을 커밋하는 동안 오류가 발생했습니다. </exception>
      <exception cref="T:System.InvalidOperationException">트랜잭션이 이미 커밋되거나 롤백되었습니다.-또는- 연결이 끊어졌습니다. </exception>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeTransaction.TrackingContext">
      <summary>트랜잭션에 의해 SQL Server Compact 데이터베이스 테이블의 추적 작업과 연결되는 응용 프로그램별 컨텍스트 정보를 가져오거나 설정합니다.</summary>
      <returns>응용 프로그램별 정보를 나타내는 값입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeTransactionInProgressException">
      <summary> 트랜잭션 진행 중에 작업이 시도되는 경우 내부 공급자가 Microsoft SQL Server Compact 데이터 원본에서 오류를 반환할 때 throw되는 예외입니다. </summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>직렬화에 도움이 되는 생성자입니다.</summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeTransactionInProgressException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>[보안 중요]  SerializationInfo를 개체를 직렬화하는 데 필요한 데이터로 채웁니다. </summary>
      <param name="info">직렬화 정보입니다.</param>
      <param name="context">스트리밍 컨텍스트입니다.</param>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlCeType"></member>
    <member name="P:System.Data.SqlServerCe.SqlCeType.SqlDbType"></member>
    <member name="M:System.Data.SqlServerCe.SqlCeType.ToString"></member>
    <member name="T:System.Data.SqlServerCe.SqlCeUpdatableRecord">
      <summary>데이터 원본에서 업데이트 가능한 값을 가진 행을 나타냅니다. <see cref="T:System.Data.SqlServerCe.SqlCeResultSet" /> 개체는 UpdatableRecords를 한 개 이상 포함합니다.</summary>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.FieldCount">
      <summary>지정된 레코드의 필드 수를 반환합니다.</summary>
      <returns>레코드의 필드 수입니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBoolean(System.Int32)">
      <summary>지정된 필드의 값을 bool로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetByte(System.Int32)">
      <summary>지정된 필드의 값을 byte로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 필드의 지정된 위치에서 시작하여 바이트 단위의 길이를 버퍼에 복사합니다. </summary>
      <param name="ordinal">데이터를 검색할 열의 서수 위치입니다.  </param>
      <param name="dataIndex">데이터 복사를 시작할 원본 필드 내의 오프셋(바이트 단위)입니다.</param>
      <param name="buffer">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferIndex">복사를 시작할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChar(System.Int32)">
      <summary>지정된 필드의 값을 char로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 필드의 지정된 위치에서 시작하여 문자 단위의 길이를 버퍼에 복사합니다. </summary>
      <param name="ordinal">데이터를 검색할 필드의 위치입니다.</param>
      <param name="dataIndex">복사를 시작할 원본 필드 내의 오프셋(문자 단위)입니다.</param>
      <param name="buffer">데이터를 복사해 넣을 버퍼입니다.</param>
      <param name="bufferIndex">복사를 시작할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetData(System.Int32)">
      <summary>현재 레코드에 위치한 <see cref="T:System.Data.SqlServerCe.SqlCeDataReader" />를 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDataTypeName(System.Int32)">
      <summary>지정된 필드의 datatype 이름을 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDateTime(System.Int32)">
      <summary>지정된 필드의 값을 DateTime으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDecimal(System.Int32)">
      <summary>지정된 필드의 값을 decimal로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetDouble(System.Int32)">
      <summary>지정된 필드의 값을 double로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFieldType(System.Int32)">
      <summary>지정된 필드의 CLR 데이터 형식을 반환합니다.</summary>
      <returns>필드의 CLR 데이터 형식입니다.</returns>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetFloat(System.Int32)">
      <summary>지정된 필드의 값을 float로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetGuid(System.Int32)">
      <summary>지정된 필드의 값을 GUID로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt16(System.Int32)">
      <summary>지정된 필드의 값을 int16으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt32(System.Int32)">
      <summary>지정된 필드의 값을 int32로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetInt64(System.Int32)">
      <summary>지정된 필드의 값을 int64로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetName(System.Int32)">
      <summary>지정된 필드의 이름을 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetOrdinal(System.String)">
      <summary>전달된 이름에서 지정된 필드의 서수를 반환합니다.</summary>
      <param name="name">서수를 확인할 필드 이름입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBinary(System.Int32)">
      <summary>지정된 필드의 값을 SqlBinary로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBoolean(System.Int32)">
      <summary>지정된 필드의 값을 SqlBoolean으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlByte(System.Int32)">
      <summary>지정된 필드의 값을 SqlByte로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlBytesRef(System.Int32)">
      <summary>지정된 필드의 값이 포함되어 있는 SqlBytes 인스턴스에 대한 참조를 반환합니다.</summary>
      <returns>SqlBytes 인스턴스에 대한 참조입니다.</returns>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlCharsRef(System.Int32)">
      <summary>지정된 필드의 값이 포함되어 있는 SqlChars 인스턴스에 대한 참조를 반환합니다.</summary>
      <returns>SqlChars 인스턴스에 대한 참조입니다.</returns>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDateTime(System.Int32)">
      <summary>지정된 필드의 값을 SqlDateTime으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDecimal(System.Int32)">
      <summary>지정된 필드의 값을 SqlDecimal로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlDouble(System.Int32)">
      <summary>지정된 필드의 값을 SqlDouble로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlGuid(System.Int32)">
      <summary>지정된 필드의 값을 SqlGuid로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt16(System.Int32)">
      <summary>지정된 필드의 값을 SqlInt16으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt32(System.Int32)">
      <summary>지정된 필드의 값을 SqlInt32로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlInt64(System.Int32)">
      <summary>지정된 필드의 값을 SqlInt64로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMetaData(System.Int32)">
      <summary>지정된 필드의 값을 SqlMetaData로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlMoney(System.Int32)">
      <summary>지정된 필드의 값을 SqlMoney로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlSingle(System.Int32)">
      <summary>지정된 필드의 값을 SqlSingle로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetSqlString(System.Int32)">
      <summary>지정된 필드의 값을 SqlString으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetString(System.Int32)">
      <summary>지정된 필드의 값을 string으로 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValue(System.Int32)">
      <summary>지정된 레코드의 값을 반환합니다.</summary>
      <param name="ordinal">값을 검색할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.GetValues(System.Object[])">
      <summary>레코드에 있는 모든 필드의 값을 반환합니다.</summary>
      <param name="values">반환된 값을 저장할 배열입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.HiddenFieldCount">
      <summary>레코드의 숨김 필드 수를 반환합니다. SQL Server Compact에서 이 속성은 항상 0을 반환합니다.</summary>
      <returns>항상 값 0을 반환합니다.</returns>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsDBNull(System.Int32)">
      <summary>지정된 필드가 NULL인지 여부를 확인합니다.</summary>
      <returns>NULL 필드이면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">확인할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.IsSetAsDefault(System.Int32)">
      <summary>지정된 필드가 내부 기본값을 사용하도록 표시되었는지 여부를 확인합니다.</summary>
      <returns>필드가 기본값을 사용하도록 표시되었으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="ordinal">확인할 필드입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.Int32)">
      <summary>레코드 내의 특정 필드에 대한 인덱서 역할을 합니다.</summary>
      <param name="ordinal">레코드 내에서 필드(열)의 서수입니다.</param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Item(System.String)">
      <summary>레코드 내의 특정 필드에 대한 인덱서 역할을 합니다.</summary>
      <param name="name">레코드에 있는 필드(열)의 이름입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBoolean(System.Int32,System.Boolean)">
      <summary>지정된 인덱스의 열을 전달된 bool 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetByte(System.Int32,System.Byte)">
      <summary>지정된 인덱스의 열을 전달된 byte 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>지정된 버퍼에서 바이트 단위의 길이를 필드 내의 지정된 위치에서 시작하여 지정된 열에 복사합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="dataIndex">데이터를 복사해 넣을 열 내의 위치입니다.</param>
      <param name="buffer">복사할 데이터가 들어 있는 버퍼입니다.</param>
      <param name="bufferIndex">데이터를 복사할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChar(System.Int32,System.Char)">
      <summary>지정된 인덱스의 열을 전달된 char 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>지정된 버퍼에서 문자 단위의 길이를 필드 내의 지정된 위치에서 시작하여 지정된 필드에 복사합니다.</summary>
      <param name="ordinal">설정할 열의 서수 위치입니다.</param>
      <param name="dataIndex">데이터를 복사해 넣을 열 내의 위치입니다.</param>
      <param name="buffer">복사할 데이터가 들어 있는 버퍼입니다.</param>
      <param name="bufferIndex">데이터를 복사할 원본 버퍼 내의 오프셋입니다.</param>
      <param name="length">복사할 최대 바이트 수입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDateTime(System.Int32,System.DateTime)">
      <summary>지정된 인덱스의 열을 전달된 DateTime 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDecimal(System.Int32,System.Decimal)">
      <summary>지정된 인덱스의 열을 전달된 decimal 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDefault(System.Int32)">
      <summary>지정된 필드의 기본값을 설정합니다.</summary>
      <param name="ordinal">설정할 필드입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetDouble(System.Int32,System.Double)">
      <summary>지정된 인덱스의 열을 전달된 double 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetFloat(System.Int32,System.Single)">
      <summary>지정된 인덱스의 열을 전달된 float 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetGuid(System.Int32,System.Guid)">
      <summary>지정된 인덱스의 열을 전달된 GUID 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt16(System.Int32,System.Int16)">
      <summary>지정된 인덱스의 열을 전달된 int16 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt32(System.Int32,System.Int32)">
      <summary>지정된 인덱스의 열을 전달된 int32 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetInt64(System.Int32,System.Int64)">
      <summary>지정된 인덱스의 열을 전달된 int64 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetObjectRef(System.Int32,System.Object)">
      <summary>지정된 필드의 값을 값 대신 참조에 의해 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBinary(System.Int32,System.Data.SqlTypes.SqlBinary)">
      <summary>지정된 인덱스의 열을 전달된 SqlBinary 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlBoolean(System.Int32,System.Data.SqlTypes.SqlBoolean)">
      <summary>지정된 인덱스의 열을 전달된 SqlBool 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlByte(System.Int32,System.Data.SqlTypes.SqlByte)">
      <summary>지정된 인덱스의 열을 전달된 SqlByte 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDateTime(System.Int32,System.Data.SqlTypes.SqlDateTime)">
      <summary>지정된 인덱스의 열을 전달된 SqlDateTime 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDecimal(System.Int32,System.Data.SqlTypes.SqlDecimal)">
      <summary>지정된 인덱스의 열을 전달된 SqlDecimal 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlDouble(System.Int32,System.Data.SqlTypes.SqlDouble)">
      <summary>지정된 인덱스의 열을 전달된 SqlDouble 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlGuid(System.Int32,System.Data.SqlTypes.SqlGuid)">
      <summary>지정된 인덱스의 열을 전달된 SqlGuid 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt16(System.Int32,System.Data.SqlTypes.SqlInt16)">
      <summary>지정된 인덱스의 열을 전달된 SqlInt16 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt32(System.Int32,System.Data.SqlTypes.SqlInt32)">
      <summary>지정된 인덱스의 열을 전달된 SqlInt32 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlInt64(System.Int32,System.Data.SqlTypes.SqlInt64)">
      <summary>지정된 인덱스의 열을 전달된 SqlInt64 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlMoney(System.Int32,System.Data.SqlTypes.SqlMoney)">
      <summary>지정된 인덱스의 열을 전달된 SqlMoney 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlSingle(System.Int32,System.Data.SqlTypes.SqlSingle)">
      <summary>지정된 인덱스의 열을 전달된 SqlSingle 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetSqlString(System.Int32,System.Data.SqlTypes.SqlString)">
      <summary>지정된 인덱스의 열을 전달된 SqlString 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetString(System.Int32,System.String)">
      <summary>지정된 인덱스의 열을 전달된 string 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValue(System.Int32,System.Object)">
      <summary>지정된 인덱스의 열을 전달된 값으로 설정합니다.</summary>
      <param name="ordinal">값을 설정할 필드입니다.</param>
      <param name="value">설정할 값입니다.</param>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlCeUpdatableRecord.SetValues(System.Object[])">
      <summary>레코드의 각 필드를 전달된 배열의 해당 값으로 설정합니다.</summary>
      <param name="values">레코드에서 필드가 나타나는 순서로 설정된 값입니다. </param>
    </member>
    <member name="P:System.Data.SqlServerCe.SqlCeUpdatableRecord.Updatable">
      <summary>업데이트 가능한 필드인지 여부를 지정합니다.</summary>
      <returns>업데이트 가능한 필드이면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="T:System.Data.SqlServerCe.SqlMetaData">
      <summary>데이터베이스에서 검색된 매개 변수와 열에서 메타데이터 정보를 지정하고 검색합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Byte,System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Byte,System.Byte,System.Int64,System.Data.SqlTypes.SqlCompareOptions,System.Type)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.#ctor(System.String,System.Data.SqlDbType,System.Int64,System.Int64,System.Data.SqlTypes.SqlCompareOptions)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Boolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Byte[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Char[])"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBinary)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBoolean)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlByte)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlBytes)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlChars)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDecimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlDouble)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlGuid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlInt64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlMoney)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlSingle)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Data.SqlTypes.SqlString)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.DateTime)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Decimal)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Double)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Guid)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int16)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int32)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Int64)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Object)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.Single)"></member>
    <member name="M:System.Data.SqlServerCe.SqlMetaData.Adjust(System.String)"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.CompareOptions"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.DbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.LocaleId"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Max"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.MaxLength"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Name"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Precision"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.Scale"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.SqlDbType"></member>
    <member name="P:System.Data.SqlServerCe.SqlMetaData.TypeName"></member>
    <member name="T:System.Data.SqlServerCe.TrackingKeyType">
      <summary>추적 데이터를 식별하는 데 사용되는 키 유형을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.None">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.PrimaryKey">
      <summary>테이블에 정의된 기본 키를 사용하여 행을 고유하게 식별합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Guid">
      <summary>테이블에 정의된 전역 고유 식별자 열을 사용하여 행을 고유하게 식별합니다. 이 열은 ROWGUIDCOL 특성으로 정의된 uniqueidentifier 데이터 형식의 열입니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingKeyType.Max">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.TrackingOptions">
      <summary>테이블에서 추적할 작업을 지정합니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.None">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Insert">
      <summary>삽입만 추적합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Update">
      <summary>업데이트만 추적합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Delete">
      <summary>삭제만 추적합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.All">
      <summary>모든 작업을 추적합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.TrackingOptions.Max">
      <summary>이 값은 추적 인프라에서 사용하도록 예약되었으므로 코드에 사용하지 마십시오.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.ValidateType">
      <summary>실행할 데이터 유효성 검사의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.NoValidation">
      <summary>유효성 검사가 수행되지 않도록 지정합니다. 기본 설정입니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.ValidateType.RowCountOnly">
      <summary>게시된 데이터에서 행 개수 비교가 수행되도록 지정합니다.</summary>
    </member>
    <member name="T:System.Data.SqlServerCe.VerifyOption">
      <summary>이러한 옵션을 통해 사용할 데이터베이스 확인의 수준을 결정할 수 있습니다. </summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Default">
      <summary>데이터베이스의 각 페이지에 대한 체크섬을 다시 계산하고 새 체크섬을 예상 값과 비교합니다.</summary>
    </member>
    <member name="F:System.Data.SqlServerCe.VerifyOption.Enhanced">
      <summary>Default 옵션과 같은 검사를 수행하고 인덱스 무결성을 확인합니다. 각 인덱스 항목이 테이블에 있는지와 각 테이블 항목이 인덱스에 있는지를 검사합니다. 이 옵션을 사용하면 Default 옵션보다 느리지만 더욱 철저하게 검사합니다.</summary>
    </member>
  </members>
</doc>